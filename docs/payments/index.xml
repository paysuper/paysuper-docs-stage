<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Checkout Overview on PaySuper docs</title>
    <link>https://docs.stg.pay.super.com/docs/payments/</link>
    <description>Recent content in Checkout Overview on PaySuper docs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://docs.stg.pay.super.com/docs/payments/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>After the payment</title>
      <link>https://docs.stg.pay.super.com/docs/payments/fulfillment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.stg.pay.super.com/docs/payments/fulfillment/</guid>
      <description>Your customer gets an email with the receipt and an extra email with the purchased Product or Products as soon as the transaction is complete. If your customer has purchased several game-keys for different DRM platforms, they get an email per DRM platform with a game key and instructions on how to activate the key on the target DRM store. At the same time you see that transaction on the Dashboard in PaySuper Admin.</description>
    </item>
    
    <item>
      <title>Client-Only Integration</title>
      <link>https://docs.stg.pay.super.com/docs/payments/sdk-integration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.stg.pay.super.com/docs/payments/sdk-integration/</guid>
      <description>Client-Only Integration with PaySuper JS SDK It’s easy to embed PaySuper JS SDK on any platform to display a Payment Form with just a few lines of code.  HOW IT WORKS
Try out the payment sample or see the code on GitHub.
  Step 1. Embed the Checkout Form To get started, include the following script tag on your website - always load it directly from https://cdn.pay.super.com:</description>
    </item>
    
    <item>
      <title>Client-Server Integration</title>
      <link>https://docs.stg.pay.super.com/docs/payments/integration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.stg.pay.super.com/docs/payments/integration/</guid>
      <description>Client-Server Integration with PaySuper API If your sales use cases are not suited the client-only integration, use the client-server integration with PaySuper API instead.
Step 1. Create a Checkout Order ID on your server Send the POST /api/v1/order to receive an Order ID. Learn more about the full list of parameters that can be used for instance the redirect URLs for successful and failed payments.
Simple Checkout To collect one-time payments it&amp;rsquo;s enough to have a Project ID and an acceptable amount with currency.</description>
    </item>
    
    <item>
      <title>Customizing Checkout</title>
      <link>https://docs.stg.pay.super.com/docs/payments/customization/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.stg.pay.super.com/docs/payments/customization/</guid>
      <description>Customizing Checkout Learn about the different ways you can customize your Checkout.
Localization The Checkout Form is localized for 2 languages with 10 more translations coming soon.
You can choose the complete set of supported languages for the project and products descriptions on the Project Settings page.
Prefilling user data Boost your paying conversion rate with pre-filled payment form with user&amp;rsquo;s name and email. Generate a Token to encrypt all required information about the user intent to pay.</description>
    </item>
    
    <item>
      <title>Going Live</title>
      <link>https://docs.stg.pay.super.com/docs/payments/live/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.stg.pay.super.com/docs/payments/live/</guid>
      <description>Below is a holistic view of the process from the very start to going live:  Complete the onboarding and fill in the info about your Projects and Products Implement PaySuper Checkout on your website Setup the webhooks on your backend Test that everything works fine in our sandbox We verify that you&amp;rsquo;re good to go live and flip the switch You can stop reading this text, instead do navigate to the Dashboard to see the first sales =)  Now let&amp;rsquo;s double check all the important details that you may have missed When you’re done with PaySuper Checkout integration and are thinking about going live, we suggest you refer to the points below to make sure you haven&amp;rsquo;t missed an important detail or two.</description>
    </item>
    
    <item>
      <title>Quick start</title>
      <link>https://docs.stg.pay.super.com/docs/payments/quick-start/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.stg.pay.super.com/docs/payments/quick-start/</guid>
      <description>Payments Flow User Flow   Integration Flow   Quick start Step 1. Register a PaySuper Company account  Registration and onboarding     Sign up. Verify your email address from a delivered confirmation email. Follow several steps of a brief Welcome Onboarding. It&amp;rsquo;s required to fill in the Banking info in the Company Onboarding to enable creating a project.  When you are ready to start selling you will need to fill in all your company details in the Company Onboarding and the signed documents in the License Agreement.</description>
    </item>
    
    <item>
      <title>Testing Checkout</title>
      <link>https://docs.stg.pay.super.com/docs/payments/testing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.stg.pay.super.com/docs/payments/testing/</guid>
      <description>Testing the Payment Process The Payment Form integration should be tested in the Sandbox before going live.
The Sandbox provides full functionality but it only emulates processing, no actual bank transactions are made.
When using the PaySuper JS SDK ensure that:
 Handlers for the events are displayed properly. The PaySuper object created with all required parameters or your token contains all desired parameters.  Incase of using the PaySuper API in your server-side code ensure that:</description>
    </item>
    
    <item>
      <title>Token-based Checkout</title>
      <link>https://docs.stg.pay.super.com/docs/payments/token/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.stg.pay.super.com/docs/payments/token/</guid>
      <description>Token-based Checkout A Token is a secure string that represents the details of your user, game and purchase parameters.
You can create a Token before your customer intents to pay and use it in the future payments. For instance, you can create the Token after a user signed up or logged in your website or a game client. When your customer wants to pay for something you instantly redirect them to the PaySuper-hosted Checkout Form to immediately complete a purchase.</description>
    </item>
    
  </channel>
</rss>
swagger: "2.0"
definitions:
  model.AccountingPayment:
    properties:
      success_with_commissions:
        description: |
          total amount to accounting payment to merchant include commissions
        type: number
      success_without_commissions:
        description: |
          total amount to accounting payment to merchant exclude commissions
        type: number
      total_chargeback:
        description: |
          total amount charged payments
        type: number
      total_commission:
        description: |
          total amount of commissions
        type: number
      total_refund:
        description: |
          total amount refunded payments
        type: number
    type: object
  model.Country:
    properties:
      code_a2:
        description: |
          2 chars ISO 3166-1 country code
        type: string
      code_a3:
        description: |
          3 chars ISO 3166-1 country code
        type: string
      code_int:
        description: |
          numeric ISO 3166-1 country code
        type: integer
      created_at:
        description: |
          date of create country in system
        type: string
      is_active:
        description: |
          is country active
        type: boolean
      name:
        $ref: '#/definitions/model.Name'
        description: |
          list of country names
        type: object
    type: object

  model.Error:
    properties:
      message:
        description: |
          text error description
        type: string
      code:
        type: string
        description: error code
    type: object

  model.JsonOrderCreateResponse:
    properties:
      account:
        description: |
          user account, may be null
        type: string
      has_vat:
        description: |
          flag to show VAT commission amount in payment form
        type: boolean
      vat:
        description: VAT amount
        type: number
      amount:
        description: order amount without VAT
        type: number
      total_amount:
        description: total order amount with VAT
        type: number
      currency:
        description: order currency
        type: string
      user_address_data_required:
        description: flag to get information about user real geo position
        type: boolean
      id:
        description: |
          order unique identifier
        type: string
      inline_form_redirect_url:
        description: |
          url to redirect user to inline form in PSP side
        type: string
      payment_methods:
        description: |
          contain data about payment methods
        items:
          $ref: '#/definitions/model.PaymentMethodJsonOrderResponse'
        type: array
      project:
        $ref: '#/definitions/model.ProjectJsonOrderResponse'
        description: |
          contain data about project
        type: object
      token:
        description: |
          access token to websocket private chanel
        type: string
      platform_id:
        description: |
          id of platform for key product (steam, gog, xbox, etc.)
        type: string
        example: steam
      type:
        description: |
          type of products in order (simple, product, key)
        type: string
        example: simple
        enum:
          - simple
          - product
          - key
    type: object

  model.Name:
    properties:
      en:
        description: |
          english name
        type: string
      ru:
        description: |
          russian name
        type: string
    type: object

  model.OrderCreatePaymentRequest:
    properties:
      address:
        description: |
          user wallet address in crypto payment system. required only for crypto payment
        type: string
      card_holder:
        description: |
          bank card card holder name. required only for bank card payment
        type: string
      cvv:
        description: |
          bank card cvv code. required only for bank card payment
        type: integer
      ewallet:
        description: |
          user account in ewallet payment system. required only for ewallet payment
        type: string
      month:
        description: |
          month of expire date of user bank card. required only for bank card payment
        type: integer
      order_id:
        description: |
          unique identifier of order on PSP (P1) side
        type: string
      pan:
        description: |
          user bank card number. required only for bank card payment
        type: string
      payment_method_id:
        description: |
          unique identifier of payment method by PSP (P1) classifier
        type: string
      year:
        description: |
          year of expire date of user bank card. required only for bank card payment
        type: integer
    type: object

  order.project:
    properties:
      id:
        type: string
        description: project unique identifier
      merchant_id:
        type: string
        description: project merchant unique identifier
      url_success:
        type: string
        description: url for redirect user after successfully completed payment
      url_fail:
        type: string
        description: url for redirect user after failed payment
      send_notify_email:
        type: boolean
        description: flag to send notification emails by "notify_emails" list after successfully completed payment
      notify_emails:
        type: array
        description: emails list to send notification email after successfully completed payment
        items:
          type: string
      secret_key:
        type: string
        description: project secret key
      url_check_account:
        type: string
        description: callback url to check payment requisites
      url_process_payment:
        type: string
        description: callback url to send payment complete request
      callback_protocol:
        type: string
        description: "type of callback notification protocol. now available next values: empty - notification request not send, order just mark as successfully complete; default - notification request send by PaySuper notification protocol;"

  order.payment_method.card:
    properties:
      first6:
        type: string
        description: string representing the first 6 digits of the card. Available only for a card method
      last4:
        type: string
        description: string representing the last 4 digits of the card. Available only for a card method
      masked:
        type: string
        description: masked pan of bank card
      expiry_month:
        type: string
        description: month of expiration bank card
      expiry_year:
        type: string
        description: year of expiration bank card
      brand:
        type: string
        description: bank card brand
      fingerprint:
        type: string
        description: string representing the internal fingerprint for given card
      secure3d:
        type: boolean
        description: true is 3DS secure was used during payment

  order.payment_method.wallet:
    properties:
      brand:
        type: string
        description: name of payment system
      account:
        type: string
        description: payer wallet number in payment system

  order.payment_method.crypto_currency:
    properties:
      brand:
        type: string
        description: name of crypto currency system
      address:
        type: string
        description: payer address in crypto cyrrency system

  order.payment_method:
    properties:
      title:
        type: string
        description: payment method name
      external_id:
        type: string
        description: payment method identifier in payment system
      payment_system_id:
        type: string
        description: payment system identifier
      saved:
        type: boolean
        description: true is payment method was saved by user for future usage
      card:
        $ref: '#/definitions/order.payment_method.card'
        description: object contain main information about requisites if payment was by bank card. may be null
      wallet:
        $ref: '#/definitions/order.payment_method.wallet'
        description: object contain main information about requisites if payment was by e-wallets. may be null
      crypto_currency:
        $ref: '#/definitions/order.payment_method.crypto_currency'
        description: object contain main information about requisites if payment was by crypto currency. may be null

  order.user.address:
    properties:
      country:
        type: string
        description: string representing the the user's country. two-letter uppercase country code in ISO 3166-1 alpha-2 format
      city:
        type: string
        description: user's city
      postal_code:
        type: string
        description: postal code
      state:
        type: string
        description: state name

  order.user:
    properties:
      id:
        type: string
        description: customer identity identifier
      object:
        type: string
        description: constant with object name
      external_id:
        type: string
        description: user identifier in project
      name:
        type: string
        description: user name
      email:
        type: string
        description: user email
      email_verified:
        type: boolean
        description: true is email was verified
      phone:
        type: string
        description: user phone
      phone_verified:
        type: boolean
        description: true is phone was verified
      ip:
        type: string
        description: user ip address
      locale:
        type: string
        description: user's locale. two-letter code in lowercase
      address:
        $ref: '#/definitions/order.user.address'
      metadata:
        type: object
        description: set of key-value pairs that attached to an object on create order state
      notify_new_region:
        type: boolean
        description: true is user wanting to receiving notification when paysuper will work in user's region
      notify_new_region_email:
        type: string
        description: user's email to send notification email when paysuper starting work in user's region

  order.money:
    properties:
      amount:
        type: number
        description: entry amount
      currency:
        type: string
        description: entry currency. three-letter ISO 4217 currency code, in uppercase.

  order.public:
    properties:
      uuid:
        type: string
        description: order unique identifier
      total_payment_amount:
        type: number
        description: payment amount
      currency:
        type: string
        description: payment currency. three-letter ISO 4217 currency code, in uppercase.
      project:
        description: object contain main iformation about project
        $ref: '#/definitions/order.project'
      created_at:
        description: object contain information about time when payment created
        $ref: '#/definitions/ProtobufTimestamp'
      transaction:
        type: string
        description: unique identifier for the transaction in payment system
      transaction_date:
        $ref: '#/definitions/ProtobufTimestamp'
        description: object contain information about time when payment processed in payment system
      payment_method:
        $ref: '#/definitions/order.payment_method'
        description: object contain information about payment method
      country_code:
        type: string
        description: string representing the the user's country. two-letter uppercase country code in ISO 3166-1 alpha-2 format
      merchant_id:
        type: string
        description: project merchant unique identifier
      locale:
        type: string
        description: user's locale. two-letter code in lowercase
      status:
        type: string
        description: "string representing the order current status. possible statuses: created - the order created but not processed yet; canceled - the order was canceled and money refunded to user; rejected - the order was rejected by payment system with any reasons; processed - the order was processed in payment system;"
      user:
        $ref: '#/definitions/order.user'
        description: object contain information about user
      billing_address:
        $ref: '#/definitions/order.user.address'
        description: object contain information about user address by payment form
      type:
        type: string
        description: constant with object type
      is_vat_deduction:
        type: boolean
        description: true is vat deduction
      gross_revenue:
        $ref: '#/definitions/order.money'
        description: object contain information about gross revenue
      tax_fee:
        $ref: '#/definitions/order.money'
        description: object contain information about tax fee
      tax_fee_currency_exchange_fee:
        $ref: '#/definitions/order.money'
        description: object contain information about tax fee currency exchange fee
      tax_fee_total:
        $ref: '#/definitions/order.money'
        description: object contain information about tax fee total
      method_fee_total:
        $ref: '#/definitions/order.money'
        description: object contain information about method fee total
      method_fee_tariff:
        $ref: '#/definitions/order.money'
        description: object contain information about method fee tariff
      method_fixed_fee_tariff:
        $ref: '#/definitions/order.money'
        description: object contain information about method fixed fee tariff
      paysuper_fixed_fee:
        $ref: '#/definitions/order.money'
        description: object contain information about paysuper fixed fee
      fees_total:
        $ref: '#/definitions/order.money'
        description: object contain information about fees total
      fees_total_local:
        $ref: '#/definitions/order.money'
        description: object contain information about fees total local
      net_revenue:
        $ref: '#/definitions/order.money'
        description: object contain information about net revenue
      refund_gross_revenue:
        $ref: '#/definitions/order.money'
        description: object contain information about refund gross revenue
      method_refund_fee_tariff:
        $ref: '#/definitions/order.money'
        description: object contain information about method refund fee tariff
      merchant_refund_fixed_fee_tariff:
        $ref: '#/definitions/order.money'
        description: object contain information about merchant refund fixed fee tariff
      refund_tax_fee:
        $ref: '#/definitions/order.money'
        description: object contain information about refund tax fee
      refund_tax_fee_currency_exchange_fee:
        $ref: '#/definitions/order.money'
        description: object contain information about refund tax fee currency exchange fee
      paysuper_refund_tax_fee_currency_exchange_fee:
        $ref: '#/definitions/order.money'
        description: object contain information about paysuper refund tax fee currency exchange fee
      refund_reverse_revenue:
        $ref: '#/definitions/order.money'
        description: object contain information about refund reverse revenue
      refund_fees_total:
        $ref: '#/definitions/order.money'
        description: object contain information about refund fees total
      refund_fees_total_local:
        $ref: '#/definitions/order.money'
        description: object contain information about refund fees total local

  order.list.public:
    properties:
      count:
        description: total count of selected orders
        type: integer
      items:
        description: array of selected orders
        items:
          $ref: '#/definitions/order.public'
        type: array
    type: object

  model.OrderScalar:
    properties:
      account:
        description: |
          user unique account in project
        type: string
      amount:
        description: |
          order amount
        type: number
      currency:
        description: |
          order currency by ISO 4217 (3 chars). If this field send, then we're process amount in this currency
        type: string
      description:
        description: |
          order description. If this field not send in request, then we're create standard order description
        type: string
      order_id:
        description: |
          unique order identifier in project. This field not required, BUT we're recommend send this field always
        type: string
      other:
        description: |
          object with any fields on the project side that do not match the names of the reserved fields
        type: object
      payer_email:
        description: |
          user (payer) email
        type: string
      payer_ip:
        description: |
          user (payer) ip
        type: string
      payer_phone:
        description: |
          user (payer) phone
        type: string
      payment_method:
        description: |
          payment method identifier in Protocol One payment solution
        type: string
      project:
        description: |
          project unique identifier in Protocol One payment solution
        type: string
      region:
        description: |
          user (payer) region code by ISO 3166-1 (2 chars) for check project packages. If this field not send, then user region will be get from user ip
        type: string
      signature:
        description: |
          signature of request to verify that the data has not been changed. This field not required, BUT we're recommend send this field always
        type: string
      url_fail:
        description: |
          URL for redirect user after failed payment. This field can be send if it allowed in project admin panel
        type: string
      url_notify:
        description: |
          URL for payment notification request to project. This field can be send if it allowed in project admin panel
        type: string
      url_success:
        description: |
          URL for redirect user after successfully completed payment. This field can be send if it allowed in project admin panel
        type: string
      url_verify:
        description: |
          URL for payment data verification request to project. This field can be send if it allowed in project admin panel
        type: string
    required:
      - project
      - amount
    type: object

  model.PaymentMethodJsonOrderResponse:
    properties:
      account_regexp:
        description: |
          regexp mask for check main requisite of payment method
        type: string
      group_alias:
        description: |
          payment method group alias
        type: string
      icon:
        description: |
          url to payment method icon
        type: string
      id:
        description: |
          payment method unique identifier
        type: string
      name:
        description: |
          payment method name
        type: string
      type:
        description: |
          payment method type. allowed: bank_card, ewallet, crypto
        type: string
    type: object

  model.Project:
    properties:
      id:
        description: |
          unique project identifier
        type: string
      merchant_id:
        description: project merchant id
        type: string
      image:
        description: url to project logo
        type: string
      callback_currency:
        type: string
        description: currency to send payment notification
      callback_protocol:
        description: |
          protocol identifier to send payment notification. Now available: default, empty
        type: string
      create_invoice_allowed_urls:
        description: |
          list of urls rom which you can send a request to create an order
        items:
          type: string
        type: array
      status:
        description: "project status. now available: 0 - new project; 1 - project successfully complete integration tests; 2 - project fail one or more integration test; 3 - project in production; 4 - project deleted"
        type: integer
      allow_dynamic_notify_urls:
        description: |
          is allow send dynamic notification urls in request to create an order
        type: boolean
      allow_dynamic_redirect_urls:
        description: |
          is allow send dynamic user's redirect urls in request to create an order
        type: boolean
      limits_currency:
        description: currency for amount's limit
        type: string
      max_payment_amount:
        description: |
          maximal amount allowed for create order
        type: number
      min_payment_amount:
        description: |
          minimal amount allowed for create order
        type: number
      name:
        description: "project names map in other language: {\"en\": \"project name\", \"ru\": \"имя проекта\"}"
        type: object
      notify_emails:
        description: |
          list of emails to send notifications about successfully completed payment operations
        items:
          type: string
        type: array
      is_products_checkout:
        description: |
          is allow create order only with amounts from products list
        type: boolean
      secret_key:
        description: |
          secret key for create check hash for request about order statuses changes
        type: string
      send_notify_email:
        description: |
          is allow send notifications about successfully completed payment operations to user's emails
        type: boolean
      url_check_account:
        description: |
          default url to send request for verification payment data to project
        type: string
      url_process_payment:
        description: |
          default url to send request for notification about successfully completed payment to project
        type: string
      url_redirect_fail:
        description: |
          default url to redirect user after failed payment
        type: string
      url_redirect_success:
        description: |
          default url to redirect user after successfully completed payment
        type: string
      products_count:
        description: count of project's products
        type: integer
      created_at:
        description: date of create merchant in system in unix timestamp
        type: object
      updated_at:
        description: date of update merchant in system in unix timestamp
        type: object
    type: object
  model.ProjectJsonOrderResponse:
    properties:
      name:
        description: |
          project name
        type: string
      url_fail:
        description: |
          url to redirect user after failed payment. may be NULL if not set in project settings
        type: string
      url_success:
        description: |
          url to redirect user after successfully completed payment. may be NULL if not set in project settings
        type: string
    type: object

  model.RevenueDynamicMainData:
    properties:
      avg:
        type: number
      count:
        type: integer
      total:
        type: number
    type: object
  model.RevenueDynamicPoint:
    properties:
      amount:
        type: number
      date:
        $ref: '#/definitions/model.RevenueDynamicPointDate'
        type: object
    type: object
  model.RevenueDynamicPointDate:
    properties:
      day:
        type: integer
      hour:
        type: integer
      month:
        type: integer
      week:
        type: integer
      year:
        type: integer
    type: object
  model.RevenueDynamicResult:
    properties:
      points:
        items:
          $ref: '#/definitions/model.RevenueDynamicPoint'
        type: array
      refund:
        $ref: '#/definitions/model.RevenueDynamicMainData'
        type: object
      revenue:
        $ref: '#/definitions/model.RevenueDynamicMainData'
        type: object
    type: object

  payment_system.PaymentResponse:
    properties:
      error:
        type: string
      redirect_url:
        type: string
    type: object
  taxes.TaxRate:
    properties:
      id:
        type: string
      country:
        type: string
      city:
        type: string
      state:
        type: string
      zip:
        type: string
      rate:
        type: number
    type: object
    required:
      - country
      - rate

  report_file.CreateReportFileParams:
    properties:
      merchant_id:
        type: string
      file_type:
        type: string
      report_type:
        type: string
      template:
        type: string
      params:
        type: object
    type: object
    required:
      - file_type
      - report_type
      - params
  report_file.CreateReportFileResponse:
    properties:
      status:
        type: number
      message:
        type: string
      file_id:
        type: string
    type: object

  payment_method.PaymentMethodParams:
    properties:
      currency:
        type: string
      terminal_id:
        type: string
      secret:
        type: string
      secret_callback:
        type: string
    type: object
    required:
      - currency

  payment_method.PostProductMethod:
    properties:
      name:
        description: Name of method
        type: string
      group_alias:
        description: Name of group for currency type
        type: string
      external_id:
        description: External id
        type: string
      currencies:
        description: List of currency int codes
        type: array
        items:
          type: integer
      min_payment_amount:
        description: Minimal payment amount
        type: integer
      max_payment_amount:
        description: Maximum payment amount
        type: integer
      type:
        description: Type of payment method
        type: string
      account_regexp:
        description: Regular expression for validation
        type: string
      is_active:
        description: Active or not
        type: boolean
      payment_system_id:
        description: Payment system identifier
        type: string
      test_settings:
        description: List of test settings
        type: array
        items:
          type: object
          $ref: '#/definitions/payment_method.PaymentMethodParams'
      production_settings:
        description: List of production settings
        type: array
        items:
          type: object
          $ref: '#/definitions/payment_method.PaymentMethodParams'
    type: object
    required:
      - name
      - external_id
      - payment_system_id

  payment_method.PutProductMethod:
    properties:
      id:
        description: Payment method identifier
        type: string
      name:
        description: Name of method
        type: string
      group_alias:
        description: Name of group for currency type
        type: string
      external_id:
        description: External id
        type: string
      currencies:
        description: List of currency int codes
        type: array
        items:
          type: integer
      min_payment_amount:
        description: Minimal payment amount
        type: integer
      max_payment_amount:
        description: Maximum payment amount
        type: integer
      type:
        description: Type of payment method
        type: string
      account_regexp:
        description: Regular expression for validation
        type: string
      is_active:
        description: Active or not
        type: boolean
      payment_system_id:
        description: Payment system identifier
        type: string
      test_settings:
        description: List of test settings
        type: array
        items:
          type: object
          $ref: '#/definitions/payment_method.PaymentMethodParams'
      production_settings:
        description: List of production settings
        type: array
        items:
          type: object
          $ref: '#/definitions/payment_method.PaymentMethodParams'
    type: object
    required:
      - id
      - name
      - external_id
      - payment_system_id

  payment_method.UpdatePaymentMethodParams:
    properties:
      id:
        description: Payment method identifier
        type: string
      payment_system_id:
        description: Payment system identifier
        type: string
      params:
        description: List of settings
        type: object
        $ref: '#/definitions/payment_method.PaymentMethodParams'
    type: object
    required:
      - id
      - payment_system_id
      - params

  onboarding.Contacts.Authorized:
    properties:
      name:
        description: person full name
        type: string
      email:
        description: person email
        type: string
      phone:
        description: person contact phone
        type: string
      position:
        description: person position in company
        type: string
    required:
      - name
      - email
      - phone
      - position

  onboarding.Contacts.Technical:
    properties:
      name:
        description: person full name
        type: string
      email:
        description: person email
        type: string
      phone:
        description: person contact phone
        type: string
    required:
      - name
      - email
      - phone

  onboarding.Company:
    properties:
      name:
        type: string
        description: name
      alternative_name:
        type: string
        description: brand
      website:
        type: string
        description: website url
      country:
        type: string
        description: destination country 2 letter code by ISO 3166-1
      state:
        type: string
        description: destination state or region
      zip:
        type: string
        description: destination zip code
      city:
        type: string
        description: destination city
      address:
        type: string
        description: destination address
      address_additional:
        type: string
        description: additional company address
      registration_number:
        type: string
        description: company registration number
      tax_id:
        type: string
        description: company tax identifier
    required:
      - name
      - alternative_name
      - website
      - country
      - state
      - zip
      - city
      - address

  onboarding.Contacts:
    properties:
      authorized:
        description: object contain information about merchant authorized person contacts
        $ref: '#/definitions/onboarding.Contacts.Authorized'
      technical:
        description: object contain information about contacts of merchant tecnican
        $ref: '#/definitions/onboarding.Contacts.Technical'
    required:
      - authorized
      - technical

  onboarding.Banking:
    properties:
      name:
        description: bank name
        type: string
      address:
        description: bank address
        type: string
      account_number:
        description: merchant accounting number in bank
        type: string
      swift:
        description: bank SWIFT code
        type: string
      details:
        description: any details abount merchant accounting bank
        type: string
      correspondent_account:
        description: bank correspondent account
        type: string
    required:
      - name
      - address
      - account_number
      - swift

  onboarding.Merchant.LastPayout:
    properties:
      date:
        description: date in unix timestamp when was last payout to merchant
        type: integer
      amount:
        description: last payout amount to merchant
        type: number

  onboarding.Tariff.Payment.NumberRange:
    properties:
      from:
        type: number
        description: start value
      to:
        type: number
        description: end value

  onboarding.Tariff.Payment:
    properties:
      method:
        type: string
        description: payment method name
      payout_currency:
        type: string
        description: payout cyrrency. 3 letters code by ISO 4217
      amount_range:
        description: merchan turnover range
        $ref: '#/definitions/onboarding.Tariff.Payment.NumberRange'
      country:
        type: string
        description: tariff country. 2 letters code by ISO 3166-1
      method_percent_fee:
        description: payment method fee in percents
        type: number
      method_fixed_fee:
        description: payment method fixed fee in particular currency
        type: number
      method_fixed_fee_currency:
        type: string
        description: currency of payment method fixed fee.  letters code by ISO 4217
      ps_percent_fee:
        type: number
        description: paysuper fee in percents
      ps_fixed_fee:
        type: number
        description: paysuper fixed fee in particular currency
      ps_fixed_fee_currency:
        type: string
        description: currency of paysuper fixed fee.  letters code by ISO 4217

  onboarding.Tariff.MoneyBack:
    properties:
      method:
        type: string
        description: payment method name
      payout_currency:
        type: string
        description: payout cyrrency. 3 letters code by ISO 4217
      country:
        type: string
        description: tariff country. 2 letters code by ISO 3166-1
      days_range:
        description: days range after payment
        $ref: '#/definitions/RangeInt'
      payment_stage:
        type: integer
        description: payment stage
      percent_fee:
        type: number
        description: payment method fee in percents
      fixed_fee:
        type: number
        description: payment method fixed fee in particular currency
      fixed_fee_currency:
        type: string
        description: currency of payment method fixed fee. letters code by ISO 4217
      is_paid_by_merchant:
        type: boolean
        description: fee will be withdrawn from the merchant account

  onboarding.Tariff.TariffRatesItem:
    properties:
      fixed_fee:
        type: number
        description: fixed fee in particular currency
      fixed_fee_currency:
        type: string
        description: currency of fixed fee. letters code by ISO 4217
      is_paid_by_merchant:
        type: boolean
        description: fee will be withdrawn from the merchant account

  onboarding.Tariff:
    properties:
      payment:
        type: array
        description: list of payment tarrifs by other payment methods
        items:
          $ref: '#/definitions/onboarding.Tariff.Payment'
      money_back:
        type: array
        description: list of refund tarrifs by other payment methods
        items:
          $ref: '#/definitions/onboarding.Tariff.MoneyBack'
      payout:
        description: payout fee
        $ref: '#/definitions/onboarding.Tariff.TariffRatesItem'
      chargeback:
        description: chargeback fee
        $ref: '#/definitions/onboarding.Tariff.TariffRatesItem'
      region:
        type: string
        description: fee region

  onboarding.Tariff.Set.Request:
    properties:
      region:
        type: string
        description: "region identifier. possible values: cis, russia, west_asia, eu, north_america, central_america, south_america, uk, worldwide, south_pacific"
      payout_currency:
        type: string
        description: merchant payout currency. letters code by ISO 4217
      amount_from:
        type: number
        description: start amount of merchant turnover
      amount_to:
        type: number
        description: end amount of merchant turnover

  onboarding.Merchant.user:
    properties:
      id:
        description: user identifier
        type: string
      email:
        description: user email
        type: string
      first_name:
        description: user first name
        type: string
      last_name:
        description: user last name
        type: string
      profile_id:
        description: user primary onboarding profile identifier
        type: string
      registration_date:
        description: time when user email was confirm
        $ref: '#/definitions/ProtobufTimestamp'

  onboarding.Merchant:
    properties:
      id:
        description: merchant unique identifier in system
        type: string
      company:
        description: merchant company info
        $ref: '#/definitions/onboarding.Company'
      contacts:
        description: contain information about contacts of merchant
        $ref: '#/definitions/onboarding.Contacts'
      banking:
        description: contain information about merchan bank
        $ref: '#/definitions/onboarding.Banking'
      status:
        description: merchant status in system
        type: integer
      created_at:
        description: date of create merchant in system in unix timestamp
        type: integer
      updated_at:
        description: date of update merchant in system in unix timestamp
        type: integer
      first_payment_at:
        description: date when was first payment by some merchant project in system in unix timestamp
        type: integer
      last_payout:
        description: contain information about last payout to merchant
        $ref: "#/definitions/onboarding.Merchant.LastPayout"
      is_signed:
        description: agreement between merchant and system fully signed
        type: boolean
      payment_methods:
        description: list of payment methods activated to merchant
        type: object
      agreement_type:
        description: "type of agreement which merchant selected. possible values: 0 - type not select; 1 - paper agreement; 2 - e-sign agreement;"
        type: integer
      agreement_sent_via_mail:
        description: "mark agreement as sent via post"
        type: boolean
      mail_tracking_link:
        description: "link to tracking package with agreement in post"
        type: string
      signature_request:
        description: object contained signatire request data
        $ref: '#/definitions/onboarding.merchant.signatureRequest'
      tariff:
        description: tariff identifier
        type: string
      agreement_template:
        description: license agreement template identifier in hellosign
        type: string
      received_date:
        description: time when merchant owner sign license agreement
        $ref: '#/definitions/ProtobufTimestamp'
      status_last_updated_at:
        description: time when merchant status was updated at last time
        $ref: '#/definitions/ProtobufTimestamp'
      has_projects:
        description: true is merchant has created projects
        type: boolean
      user:
        description: object contain main information about merchant owner from primary onboarding profile
        $ref: '#/definitions/onboarding.Merchant.user'

  onboarding.Merchant.ChangeStatus:
    properties:
      status:
        description: new status identifier of merchant
        type: integer
      message:
        description: string description to new status
        type: string
    required:
      - status

  payment_method.ChangePaymentMethodResponse:
    properties:
      status:
        description: status as result of operation
        type: integer
      message:
        description: string description for error message
        type: string
    required:
      - status

  payment_method.ChangePaymentMethodParamsResponse:
    properties:
      status:
        description: status as result of operation
        type: integer
      message:
        description: string description for error message
        type: string
    required:
      - status

  price_group.CurrencyRegion:
    properties:
      id:
        description: price group identifier
        type: string
      region:
        description: name of region
        type: string
      currency:
        description: code of currency
        type: string

  price_group.CurrencyListResponse:
    properties:
      regions:
        description: list of currency
        $ref: '#/definitions/price_group.Regions'

  price_group.Regions:
    properties:
      currency:
        description: name of currency
        type: string
      region:
        description: list of regions
        $ref: '#/definitions/price_group.Region'

  price_group.Region:
    properties:
      region:
        description: name of region
        type: string
      country:
        description: list of countries
        type: array

  price_group.RecommendedPriceResponse:
    properties:
      recommended_price:
        description: list of price
        $ref: '#/definitions/price_group.RecommendedPrice'

  price_group.RecommendedPrice:
    properties:
      region:
        description: name of region
        type: string
      currency:
        description: name of currency
        type: string
      amount:
        description: recommended amount
        type: number

  onboarding.Merchant.Notification.Statuses:
    properties:
      from:
        description: status before changes
        type: integer
      to:
        description: status after changes
        type: integer

  onboarding.Merchant.Notification:
    properties:
      id:
        description: notification unique identifier in system
        type: string
      title:
        description: notification title
        type: string
      message:
        description: notification message
        type: string
      merchant_id:
        description: merchant identifier who must recieve notification
        type: string
      user_id:
        description: user identifier who send notification
        type: string
      is_system:
        description: notification generated automaticaly
        type: boolean
      is_read:
        description: receiver read notification
        type: boolean
      statuses:
        description: statuses "from -> to" for system notification. for not system notification this field will be equal NULL
        $ref: '#/definitions/onboarding.Merchant.Notification.Statuses'
      created_at:
        description: dete of create notification in unix timestamp format
        type: integer
      updated_at:
        description: dete of last update notification in unix timestamp format
        type: integer

  onboarding.Merchant.Notifications:
    properties:
      count:
        description: total number of filtered notifications
        type: integer
      items:
        description: list of filtered notifications
        $ref: '#/definitions/onboarding.Merchant.Notification'

  onboarding.Merchant.Notification.CreateRequest:
    properties:
      title:
        description: notification title
        type: string
      message:
        description: notification message
        type: string
    required:
      - title
      - message

  order.Refund:
    properties:
      id:
        description: "refund unique identifier"
        type: string
      order_id:
        description: "order unique identifier for which the refund was created"
        type: string
      external_id:
        description: "refund unique identifier on payment system side"
        type: string
      amount:
        description: "refund amount"
        type: number
      creator_id:
        description: "user identifier who created refund"
        type: string
      reason:
        description: "reason to refund"
        type: string
      currency:
        description: "refund currency"
        type: string
      status:
        description: "refund status. available statuses: 0 - refund was created; 1 - refund rejected on payment system side; 2 - refund in processing on payment system side; 3 - refund successfully completed;"
        type: integer
      created_at:
        description: dete of create notification in unix timestamp format
        type: integer
      updated_at:
        description: dete of last update notification in unix timestamp format
        type: integer

  order.Refund.CreateRequest:
    properties:
      amount:
        description: "refund amount"
        type: number
      reason:
        description: "reason to refund"
        type: string
    required:
      - amount

  onboarding.Merchant.ChangeAgreementDataRequest:
    properties:
      agreement_type:
        description: "merchant agreement type. allowed values: 1 - paper agreement; 2 - e-sign agreement;"
      has_psp_signature:
        description: "flag for set peysuper signature on the agreement"
        type: boolean
      has_merchant_signature:
        description: "flag for set merchant signature on the agreement"
        type: boolean
      agreement_sent_via_mail:
        description: "mark agreement as sent via email"
        type: boolean
      mail_tracking_link:
        description: "tracking link to mail"
        type: string

  onboarding.Merchant.PrintableAgreementData.Metadata:
    properties:
      name:
        description: agreement file name
        type: string
      extension:
        description: agreement file extension
        type: string
      content_type:
        description: agreement file content type
        type: string
      size:
        description: agreement file size in Kb
        type: integer
    required:
      - name
      - extension
      - content_type
      - size

  onboarding.Merchant.PrintableAgreementData.Response:
    properties:
      url:
        description: link to download printable agreement
        type: string
      metadata:
        description: agreement file metadata
        $ref: '#/definitions/onboarding.Merchant.PrintableAgreementData.Metadata'

  onboarding.Merchant.ChangeAgreementType.Request:
    properties:
      agreement_type:
        description: "type of agreement which merchant selected. possible values: 1 - paper agreement; 2 - e-sign agreement;"
        type: integer
    required:
      - agreement_type

  projects.CreateRequest:
    properties:
      merchant_id:
        description: project merchant id
        type: string
      image:
        description: url to project logo
        type: string
      callback_currency:
        type: string
        description: currency to send payment notification
      callback_protocol:
        description: "protocol identifier to send payment notification. Now available: default, empty"
        type: string
      create_invoice_allowed_urls:
        description: list of urls rom which you can send a request to create an order
        items:
          type: string
        type: array
      allow_dynamic_notify_urls:
        description: is allow send dynamic notification urls in request to create an order
        type: boolean
      allow_dynamic_redirect_urls:
        description: is allow send dynamic user's redirect urls in request to create an order
        type: boolean
      limits_currency:
        description: currency for amount's limit
        type: string
      max_payment_amount:
        description: maximal amount allowed for create order
        type: number
      min_payment_amount:
        description: minimal amount allowed for create order
        type: number
      name:
        description: "project names map in other language: {\"en\": \"project name\", \"ru\": \"имя проекта\"}"
        type: object
      notify_emails:
        description: list of emails to send notifications about successfully completed payment operations
        items:
          type: string
        type: array
      is_products_checkout:
        description: is allow create order only with amounts from products list
        type: boolean
      secret_key:
        description: secret key for create check hash for request about order statuses changes
        type: string
      send_notify_email:
        description: is allow send notifications about successfully completed payment operations to user's emails
        type: boolean
      url_check_account:
        description: default url to send request for verification payment data to project
        type: string
      url_process_payment:
        description: |
          default url to send request for notification about successfully completed payment to project
        type: string
      url_redirect_fail:
        description: default url to redirect user after failed payment
        type: string
      url_redirect_success:
        description: default url to redirect user after successfully completed payment
        type: string

  order.BillingAddress:
    properties:
      country:
        description: 2 chars country code in upper registry by ISO 3166-1
        type: string
      city:
        description: city name
        type: string
      postal_code:
        description: zip code
        type: string
      state:
        description: state code by ISO 3166-2
        type: string

  token.TokenRequest.ValueVerified:
    properties:
      value:
        description: parameter value
        type: string
      verified:
        description: "is parameter was verified in project side. for example: user verify email"
        type: boolean
    required:
      - value

  token.TokenRequest.Value:
    properties:
      value:
        description: parameter value
        type: string
    required:
      - value

  token.TokenRequest.User:
    properties:
      id:
        description: user identifier in project
        type: string
      email:
        description: object which contain information about user email
        $ref: '#/definitions/token.TokenRequest.ValueVerified'
      phone:
        description: object which contain information about user phone
        $ref: '#/definitions/token.TokenRequest.ValueVerified'
      name:
        description: object which contain information about user real name
        $ref: '#/definitions/token.TokenRequest.Value'
      ip:
        description: object which contain information about user ip
        $ref: '#/definitions/token.TokenRequest.Value'
      locale:
        description: object which contain information about user locale. value in this object must contain 2 characters language code in lower registry by ISO 639-1
        $ref: '#/definitions/token.TokenRequest.Value'
      address:
        description: object which contain information about user address
        $ref: '#/definitions/order.BillingAddress'
      metadata:
        description: object can contain any other information about user. object must contain only string values.
        type: object

  token.TokenRequest.Settings.ReturnUrl:
    properties:
      success:
        description: url to redirect user after payment was successfully completed
        type: string
      fail:
        description: url to redirect user after payment failed
        type: string

  token.TokenRequest.Settings.Item:
    properties:
      sku:
        description: sku identifier
        type: string
      amount:
        description: item price
        type: number
      currency:
        description: item price currency. 3 characters currency code in upper registry by ISO 4217
        type: string
    required:
      - sku
      - amount
      - currency

  token.TokenRequest.Settings:
    properties:
      project_id:
        description: project identifier
        type: string
      return_url:
        description: object contain urls for redirect user after payment ended
        $ref: '#/definitions/token.TokenRequest.Settings.ReturnUrl'
      currency:
        description: 3 characters currency code in upper registry by ISO 4217
        type: string
      amount:
        description: payment amount. this field is required if project use simple checkout payment to process payments.
        type: number
      payment_method:
        description: predefined payment method identifier
        type: string
      items:
        description: object contain information about items which user want to buy. this field is required if project not use simple checkout payment to process payments.
        type: array
        items:
          $ref: '#/definitions/token.TokenRequest.Settings.Item'
      description:
        description: payment description
        type: string
      metadata:
        description: object can contain any other information about payment. object must contain only string values. this object will return in project notification about payment.
        type: object
    required:
      - project_id

  token.TokenRequest:
    properties:
      user:
        description: object which contain any information about payer
        $ref: '#/definitions/token.TokenRequest.User'
      settings:
        description: object which contain information to process payment
        $ref: '#/definitions/token.TokenRequest.Settings'
    required:
      - user
      - settings

  token.TokenResponse:
    properties:
      token:
        description: payment token
        type: string
    required:
      - token

  product.Price:
    properties:
      amount:
        description: price
        type: number
      currency:
        description: currency
        type: string
      region:
        description: region
        type: string

  product.PutPrice:
    properties:
      id:
        description: id of product
        type: string
      prices:
        description: list of prices
        type: array
        items:
          $ref: '#/definitions/product.Price'
          type: object
    required:
      - id
      - prices

  userProfile.personal:
    properties:
      first_name:
        description: user first name
        type: string
      last_name:
        description: user last name
        type: string
      position:
        description: user position in company
        type: string

  userProfile.help:
    properties:
      product_promotion_and_development:
        description: User need help with product promotion and development
        type: boolean
      released_game_promotion:
        description: User need help with games promotion that have already been released
        type: boolean
      international_sales:
        description: User need help with international sales
        type: boolean
      other:
        description: User need help with other problems
        type: boolean

  RangeInt:
    properties:
      from:
        description: range start value
        type: integer
      to:
        description: range end value
        type: integer

  userProfile.company.monetization:
    properties:
      paid_subscription:
        description: company monetisation from buy paid subscription by company users
        type: boolean
      in_game_advertising:
        description: company monetisation from buy in game advertising
        type: boolean
      in_game_purchases:
        description: company monetisation from buy in game purchases by company users
        type: boolean
      premium_access:
        description: company monetisation from buy premium access by company users
        type: boolean
      other:
        description: company monetisation from other activities
        type: boolean

  userProfile.company.platforms:
    properties:
      pc_mac:
        description: PC/MacOs
        type: boolean
      game_console:
        description: game console
        type: boolean
      mobile_device:
        description: mobile device
        type: boolean
      web_browser:
        description: web browsers
        type: boolean
      other:
        description: other platforms
        type: boolean

  userProfile.company:
    properties:
      company_name:
        description: company name
        type: string
      website:
        description: company website url
        type: string
      annual_income:
        description: company annual income
        $ref: '#/definitions/RangeInt'
      number_of_employees:
        description: company number of employees
        $ref: '#/definitions/RangeInt'
      kind_of_activity:
        description: "company kind of activity. available values: develop_and_publish_your_games, publish_games_of_other_companies, publish_your_games_through_other_publishers, other"
        type: string
      monetization:
        description: company monetization activities
        $ref: '#/definitions/userProfile.company.monetization'
      platforms:
        description: platforms
        $ref: '#/definitions/userProfile.company.platforms'

  ProtobufTimestamp:
    properties:
      seconds:
        description: time in unix timestamp
        type: integer
      nanos:
        description: time nano seconds
        type: integer

  userProfile.request:
    properties:
      personal:
        description: object contain personal information about user
        $ref: '#/definitions/userProfile.personal'
      help:
        description: object contain information about user problem which need help
        $ref: '#/definitions/userProfile.help'
      company:
        description: object contain information about user company
        $ref: '#/definitions/userProfile.company'
      last_step:
        description: identifier of wizard last step which user ended
        type: string

  userProfile.response:
    properties:
      personal:
        description: object contain personal information about user
        $ref: '#/definitions/userProfile.personal'
      help:
        description: object contain information about user problem which need help
        $ref: '#/definitions/userProfile.help'
      company:
        description: object contain information about user company
        $ref: '#/definitions/userProfile.company'
      last_step:
        description: identifier of wizard last step which user ended
        type: string
      centrifugo_token:
        description: user authorisation token to connect to centrifigo channel
        type: string
      created_at:
        description: time of create user profile
        $ref: '#/definitions/ProtobufTimestamp'
      updated_at:
        description: time of last update user profile
        $ref: '#/definitions/ProtobufTimestamp'

  pageReview.request:
    properties:
      review:
        description: user review about page
        type: string
      page_id:
        description: "page identifier. now allowed values: primary_onboarding, merchant_onboarding"
        type: string
    required:
      - review
      - page_id

  user.confirmEmail.request:
    properties:
      token:
        description: email confirmation token
        type: string
    required:
      - token

  onboarding.merchant.fillStatus.Steps:
    properties:
      company:
        type: boolean
        description: step company basic info complete
      contacts:
        type: boolean
        description: step company contacts complete
      banking:
        type: boolean
        description: step company banking complete
      tariff:
        type: boolean
        description: step tariff complete

  onboarding.merchant.fillStatus:
    properties:
      status:
        type: string
        description: "fill status. possible values: draft, life"
      steps:
        description: object contain information about fill status different steps
        $ref: '#/definitions/onboarding.merchant.fillStatus.Steps'
      complete_steps_count:
        type: integer
        description: count of complete steps

  onboarding.merchant.signatureRequest:
    properties:
      signer_type:
        type: integer
        description: "type of signer which request a signing license agreement. possible values: 0 - merchant owner; 1 - paysuper admin"
    required:
      - signer_type

  onboarding.merchant.signatureResponse:
    properties:
      sign_url:
        type: string
        description: URL of the signature page to display in the embedded iFrame
      expires_at:
        description: time of create user profile
        $ref: '#/definitions/ProtobufTimestamp'

  onboarding.cost.payment.system:
    properties:
      id:
        description: unique identifier
        type: string
      name:
        description: payment method name
        type: string
      region:
        description: region name
        type: string
      country:
        description: two-letter country code by ISO 3166-1
        type: string
      percent:
        description: percent fee
        type: number
      fix_amount:
        description: fixed fee in particular currency
        type: number
      fix_amount_currency:
        description: currency of fixed fee.  letters code by ISO 4217
        type: string
      created_at:
        $ref: '#/definitions/ProtobufTimestamp'
        description: date of create cost record
      updated_at:
        $ref: '#/definitions/ProtobufTimestamp'
        description: date of create cost record
      is_active:
        description: true is cost record is active
        type: boolean

  onboarding.cost.payment.system.create:
    properties:
      name:
        description: payment method name
        type: string
      region:
        description: region name
        type: string
      country:
        description: two-letter country code by ISO 3166-1
        type: string
      percent:
        description: percent fee
        type: number
      fix_amount:
        description: fixed fee in particular currency
        type: number
      fix_amount_currency:
        description: currency of fixed fee.  letters code by ISO 4217
        type: string
    required:
      - name
      - region
      - percent
      - fix_amount_currency

  onboarding.cost.payment.system.all:
    properties:
      items:
        description: array of system payment costs
        type: array
        items:
          $ref: '#/definitions/onboarding.cost.payment.system'

  onboarding.cost.money_back.system.all:
    properties:
      items:
        description: array of system money back costs
        type: array
        items:
          $ref: '#/definitions/onboarding.cost.money_back.system'

  onboarding.cost.payment.merchant:
    properties:
      id:
        description: unique identifier
        type: string
      merchant_id:
        description: merchant identifier
        type: string
      name:
        description: payment method name
        type: string
      payout_currency:
        description: payout currency. 3 lettre code by ISO 4217
        type: string
      min_amount:
        description: payment min amount in payout currency
        type: number
      region:
        description: region name
        type: string
      country:
        description: two-letter country code by ISO 3166-1
        type: string
      method_percent:
        description: payment method fee in percents
        type: number
      method_fix_amount:
        description: payment method fixed fee in particular currency
        type: number
      method_fix_amount_currency:
        description: currency of payment method fixed fee. 3-letters code by ISO 4217
        type: string
      ps_percent:
        description: paysuper fixed fee in particular currency
        type: number
      ps_fixed_fee:
        description: paysuper fixed fee in particular currency
        type: number
      ps_fixed_fee_currency:
        description: currency of paysuper fixed fee. 3-letters code by ISO 4217
        type: string
      created_at:
        description: time when retes record was created for merchant
        $ref: '#/definitions/ProtobufTimestamp'
      updated_at:
        description: time when retes record was updated at last time for merchant
        $ref: '#/definitions/ProtobufTimestamp'
      is_active:
        description: true is rates record active for merchant
        type: boolean

  onboarding.cost.payment.merchant.create:
    properties:
      name:
        description: payment method name
        type: string
      payout_currency:
        description: payout currency. 3 lettre code by ISO 4217
        type: string
      min_amount:
        description: payment min amount in payout currency
        type: number
      region:
        description: region name
        type: string
      country:
        description: two-letter country code by ISO 3166-1
        type: string
      method_percent:
        description: payment method fee in percents
        type: number
      method_fix_amount:
        description: payment method fixed fee in particular currency
        type: number
      method_fix_amount_currency:
        description: currency of payment method fixed fee. 3-letters code by ISO 4217
        type: string
      ps_percent:
        description: paysuper fixed fee in particular currency
        type: number
      ps_fixed_fee:
        description: paysuper fixed fee in particular currency
        type: number
      ps_fixed_fee_currency:
        description: currency of paysuper fixed fee. 3-letters code by ISO 4217
        type: string
    required:
      - name
      - payout_currency
      - min_amount
      - region
      - method_percent
      - method_fix_amount_currency
      - ps_percent
      - ps_fixed_fee_currency

  onboarding.cost.money_back.system:
    properties:
      id:
        description: unique identifier
        type: string
      name:
        description: payment method name
        type: string
      payout_currency:
        description: payout currency. 3 lettre code by ISO 4217
        type: string
      undo_reason:
        description: "money back type. available values: refund, reversal, chargeback"
        type: string
      region:
        description: region name
        type: string
      country:
        description: two-letter country code by ISO 3166-1
        type: string
      days_from:
        description: number of days after payment operation
        type: number
      payment_stage:
        description: payment stage
        type: number
      percent:
        description: payment method fee in percents
        type: number
      fix_amount:
        description: payment method fixed fee
        type: number
      created_at:
        description: time when retes record was created
        $ref: '#/definitions/ProtobufTimestamp'
      updated_at:
        description: time when retes record was updated at last time
        $ref: '#/definitions/ProtobufTimestamp'
      is_active:
        description: true is rates record is active
        type: boolean

  onboarding.cost.money_back.system.create:
    properties:
      name:
        description: payment method name
        type: string
      payout_currency:
        description: payout currency. 3 lettre code by ISO 4217
        type: string
      undo_reason:
        description: "money back type. available values: refund, reversal, chargeback"
        type: string
      region:
        description: region name
        type: string
      country:
        description: two-letter country code by ISO 3166-1
        type: string
      days_from:
        description: number of days after payment operation
        type: number
      payment_stage:
        description: payment stage
        type: number
      percent:
        description: payment method fee in percents
        type: number
      fix_amount:
        description: payment method fixed fee
        type: number
    required:
      - name
      - payout_currency
      - undo_reason
      - region

  onboarding.cost.money_back.merchant:
    properties:
      id:
        description: unique identifier
        type: string
      merchant_id:
        description: merchant identifier
        type: string
      name:
        description: payment method name
        type: string
      payout_currency:
        description: payout currency. 3 lettre code by ISO 4217
        type: string
      undo_reason:
        description: "money back type. available values: refund, reversal, chargeback"
        type: string
      region:
        description: region name
        type: string
      country:
        description: two-letter country code by ISO 3166-1
        type: string
      days_from:
        description: number of days after payment operation
        type: number
      payment_stage:
        description: payment stage
        type: number
      percent:
        description: payment method fee in percents
        type: number
      fix_amount:
        description: payment method fixed fee in particular currency
        type: number
      fix_amount_currency:
        description: currency of payment method fixed fee.  letters code by ISO 4217
        type: string
      is_paid_by_merchant:
        description: if true than commission will to take from merchant when money back operation will be processing
        type: boolean
      created_at:
        description: time when retes record was created
        $ref: '#/definitions/ProtobufTimestamp'
      updated_at:
        description: time when retes record was updated at last time
        $ref: '#/definitions/ProtobufTimestamp'
      is_active:
        description: true is rates record is active
        type: boolean

  onboarding.cost.money_back.merchant.create:
    properties:
      name:
        description: payment method name
        type: string
      payout_currency:
        description: payout currency. 3 lettre code by ISO 4217
        type: string
      undo_reason:
        description: "money back type. available values: refund, reversal, chargeback"
        type: string
      region:
        description: region name
        type: string
      country:
        description: two-letter country code by ISO 3166-1
        type: string
      days_from:
        description: number of days after payment operation
        type: number
      payment_stage:
        description: payment stage
        type: number
      percent:
        description: payment method fee in percents
        type: number
      fix_amount:
        description: payment method fixed fee in particular currency
        type: number
      fix_amount_currency:
        description: currency of payment method fixed fee.  letters code by ISO 4217
        type: string
      is_paid_by_merchant:
        description: if true than commission will to take from merchant when money back operation will be processing
        type: boolean
    required:
      - name
      - payout_currency
      - undo_reason
      - region
      - percent
      - fix_amount_currency

  onboarding.cost.payment.merchant.all:
    properties:
      items:
        description: array of merchant payment costs
        type: array
        items:
          $ref: '#/definitions/onboarding.cost.payment.merchant'

  onboarding.cost.money_back.merchant.all:
    properties:
      items:
        description: array of merchant payment costs
        type: array
        items:
          $ref: '#/definitions/onboarding.cost.money_back.merchant'

  dashboard.main_reports.chart.float:
    properties:
      label:
        description: "point label. for example: if period to get report equal month then point label will be equal one day"
        type: string
      value:
        description: point value
        type: number

  dashboard.main_reports.chart.integer:
    properties:
      label:
        description: "point label. for example: if period to get report equal month then point label will be equal one day"
        type: string
      value:
        description: point value
        type: integer

  dashboard.main_reports.amount_with_chart:
    properties:
      amount_current:
        description: total amount calculated for current report
        type: number
      amount_previous:
        description: total amount calculated for previous report
        type: number
      currency:
        description: report amount currency.  three-letter ISO 4217 currency code, in uppercase.
        type: string
      chart:
        description: array contain objects for chart drawing
        type: array
        items:
          $ref: '#/definitions/dashboard.main_reports.chart.float'

  dashboard.main_reports.total_transactions:
    properties:
      count_current:
        description: total count of transactions by current period
        type: integer
      count_previous:
        description: total count of transactions by previous period
        type: integer
      chart:
        description: array contain objects for chart drawing
        type: array
        items:
          $ref: '#/definitions/dashboard.main_reports.chart.integer'

  dashboard.main_reports:
    properties:
      gross_revenue:
        description: object contain information for block gross revenue
        $ref: '#/definitions/dashboard.main_reports.amount_with_chart'
      vat:
        description: object contain information for block VAT
        $ref: '#/definitions/dashboard.main_reports.amount_with_chart'
      total_transactions:
        description: object contain information for block total transactions
        $ref: '#/definitions/dashboard.main_reports.total_transactions'
      arpu:
        description: object contain information for block ARPU
        $ref: '#/definitions/dashboard.main_reports.amount_with_chart'

  dashboard.revenue_dynamics.item:
    properties:
      label:
        description: "point label. for example: if period to get report equal month then point label will be equal one day"
        type: string
      amount:
        description: revenue amount for label
        type: number
      count:
        description: transactions count for label
        type: integer

  dashboard.revenue_dynamics:
    properties:
      currency:
        description: amount currency. three-letter ISO 4217 currency code, in uppercase.
        type: string
      items:
        description: array of points
        type: array
        items:
          $ref: '#/definitions/dashboard.revenue_dynamics.item'

  dashboard.base.revenue_by_country.top:
    properties:
      country:
        description: country, two-letter uppercase country code in ISO 3166-1 alpha-2 format
        type: string
      amount:
        description: amount by country
        type: number

  dashboard.base.chart:
    properties:
      label:
        description: "point label. for example: if period to get report equal month then point label will be equal one day"
        type: string
      amount:
        description: amount for label
        type: number

  dashboard.base.revenue_by_country:
    properties:
      top:
        description: array of objects with information about top 5 countries by revenue by period
        type: array
        items:
          $ref: '#/definitions/dashboard.base.revenue_by_country.top'
      total_current:
        description: total revenue amount by current period
        type: number
      total_previous:
        description: total revenue amount by previous period
        type: number
      currency:
        description: amount currency. three-letter ISO 4217 currency code, in uppercase.
        type: string
      chart:
        description: array contain objects for chart drawing
        $ref: '#/definitions/dashboard.base.chart'

  dashboard.base.sales_today.top.item:
    properties:
      name:
        description: sold item name
        type: string
      count:
        description: item total count which were sold in period
        type: integer

  dashboard.base.sales_today:
    properties:
      top:
        description: array of objects with information about top 5 merchant products (projects) which were sold in period
        type: array
        items:
          $ref: '#/definitions/dashboard.base.sales_today.top.item'
      total_current:
        description: items total count which were sold by chosen period
        type: integer
      total_previous:
        description: items total count which were sold by previous period to chosen period
        type: integer
      chart:
        description: array contain objects for chart drawing
        type: array
        items:
          $ref: '#/definitions/dashboard.main_reports.chart.integer'

  dashboard.base.sources.top.item:
    properties:
      name:
        description: url of issuer
        type: string
      count:
        description: total count
        type: integer

  dashboard.base.sources:
    properties:
      top:
        description: array of objects with information about top 5 issuers url
        type: array
        items:
          $ref: '#/definitions/dashboard.base.sources.top.item'
      total_current:
        description: transactions total count by chosen period
        type: integer
      total_previous:
        description: transactions total count by previous period to chosen period
        type: integer
      chart:
        description: array contain objects for chart drawing
        type: array
        items:
          $ref: '#/definitions/dashboard.main_reports.chart.integer'

  dashboard.base:
    properties:
      revenue_by_country:
        description: object contain information for block revenue by country
        $ref: '#/definitions/dashboard.base.revenue_by_country'
      sales_today:
        description: object contain information for block sales today
        $ref: '#/definitions/dashboard.base.sales_today'
      sources:
        description: object contain information for block sources
        $ref: '#/definitions/dashboard.base.sources'


  merchant_balance:
    properties:
      merchant_id:
        type: string
        description: merchant identificator
      currency:
        type: string
        description: currency
      debit:
        type: number
        description: balance debit
      credit:
        type: string
        description: balance credit
      rolling_reserve:
        type: number
        description: current rooling reserve balance
      total:
        type: number
        description: total amount
      created_at:
        type: string
        description: last update date

  billingPayoutDocument:
    type: object
    properties:
      id:
        type: string
        description: document id
      source_id:
        type: array
        items:
          type: string
        description: royalty reports id
      transaction:
        type: string
        description: transaction id
      amount:
        type: number
        format: double
        description: amount
      currency:
        type: string
        description: currency
      status:
        type: string
        description: status, one of skip pending in_progress paid canceled failed
      description:
        type: string
        description: description
      destination:
        $ref: '#/definitions/onboarding.Banking'
        description: merchant banking details
      created_at:
        type: string
        format: date-time
        description: creation date
      updated_at:
        type: string
        format: date-time
        description: update date
      arrival_date:
        type: string
        format: date-time
        description: arrival date
      failure_code:
        type: string
        description: failure code, one of account_closed account_frozen account_restricted destination_bank_invalid could_not_process declined insufficient_funds invalid_account_number incorrect_account_holder_name invalid_currency
      failure_message:
        type: string
        description: failure message
      failure_transaction:
        type: string
        description: failure transaction
      merchant_id:
        type: string
        description: merchant identificator
      signature_data:
        $ref: '#/definitions/billingPayoutDocumentSignatureData'
        description: hellosign signature data
      has_merchant_signature:
        type: boolean
        format: boolean
        description: is document signed by merchant
      has_psp_signature:
        type: boolean
        format: boolean
        description: is document signed by paysuper
      signed_document_file_url:
        type: string
        description: url to signed file
      period_from:
        type: string
        format: date-time
        description: payout period start
      period_to:
        type: string
        format: date-time
        description: payout period end

  billingPayoutDocumentSignatureData:
    type: object
    properties:
      details_url:
        type: string
      files_url:
        type: string
      signature_request_id:
        type: string
      merchant_signature_id:
        type: string
      ps_signature_id:
        type: string
      merchant_sign_url:
        $ref: '#/definitions/billingPayoutDocumentSignatureDataSignUrl'
      ps_sign_url:
        $ref: '#/definitions/billingPayoutDocumentSignatureDataSignUrl'

  billingPayoutDocumentSignatureDataSignUrl:
    type: object
    properties:
      sign_url:
        type: string
      expires_at:
        type: string
        format: date-time

  payout_documents_list:
    properties:
      count:
        type: number
        description: number of found documents
      items:
        description: array with documents
        items:
          $ref: '#/definitions/billingPayoutDocument'
        type: array

  payout_documents_create:
    properties:
      merchant_id:
        type: string
        description: merchant identificator to create payout document for
      description:
        type: string
        description: document description

  payout_documents_update:
    properties:
      transaction:
        type: string
        description: transaction id
      status:
        type: string
        description: status, one of skip pending in_progress paid canceled failed
      failure_code:
        type: string
        description: failure code, one of account_closed account_frozen account_restricted destination_bank_invalid could_not_process declined insufficient_funds invalid_account_number incorrect_account_holder_name invalid_currency
      failure_message:
        type: string
        description: failure message
      failure_transaction:
        type: string
        description: failure transaction


host: p1payapi.tst.protocol.one
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a Protocol One payment solution service.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Protocol One payment solution swagger documentation
  version: "1.0"

securityDefinitions:
  XAPISignatureHeader:
    type: apiKey
    in: header
    name: X-API-SIGNATURE
    description: must contain sha512 hash of concationation request body and project secret key

paths:
  /api/v1/country:
    get:
      consumes:
        - application/json
      description: Get full list of currencies or get list of currencies filtered
        by name
      parameters:
        - description: name or symbolic ISO 3166-1 code of country
          in: query
          name: name
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Country'
            type: array
        "500":
          description: Some unknown error
          schema:
            $ref: '#/definitions/model.Error'
      summary: Get list of countries
      tags:
        - Country
  /api/v1/country/{id}:
    get:
      consumes:
        - application/json
      description: Get country object by numeric ISO 3166-1 code
      parameters:
        - description: numeric ISO 3166-1 country code
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Country'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error
          schema:
            $ref: '#/definitions/model.Error'
      summary: Get country by numeric ISO 3166-1 code
      tags:
        - Country
  /api/v1/order:
    post:
      consumes:
        - application/json
      description: Create a payment order use POST JSON request
      parameters:
        - description: Order create data
          in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/model.OrderScalar'
      produces:
        - application/json
      responses:
        "200":
          description: Object which contain data to render payment form
          schema:
            $ref: '#/definitions/model.JsonOrderCreateResponse'
        "400":
          description: Object with error message
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Object with error message
          schema:
            $ref: '#/definitions/model.Error'
      summary: Create order with json request
      tags:
        - Payment Order
  /api/v1/payment:
    post:
      consumes:
        - application/json
      description: Create payment by order
      parameters:
        - description: data to create payment
          in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/model.OrderCreatePaymentRequest'
      produces:
        - application/json
      responses:
        "200":
          description: contain url to redirect user
          schema:
            $ref: '#/definitions/payment_system.PaymentResponse'
        "400":
          description: contain error description about data validation error
          schema:
            $ref: '#/definitions/payment_system.PaymentResponse'
        "402":
          description: contain error description about error on payment system side
          schema:
            $ref: '#/definitions/payment_system.PaymentResponse'
        "500":
          description: contain error description about error on PSP (P1) side
          schema:
            $ref: '#/definitions/payment_system.PaymentResponse'
      summary: Create payment
      tags:
        - Payment Order
  /admin/api/v1/order:
    get:
      consumes:
        - application/json
      produces:
        - application/json
      description: Get orders list
      parameters:
        - description: order unique identifier
          in: query
          name: id
          type: string
        - description: query array of list of projects to get orders filtered by they
          in: query
          name: project[]
          type: string
        - description: query array of list of payment methods to get orders filtered by they
          in: query
          name: payment_method[]
          type: string
        - description: query array of list of payer countries to get orders filtered by they
          in: query
          name: country[]
          type: string
        - description: query array of list of orders statuses to get orders filtered by they
          in: query
          name: status[]
          type: integer
        - description: payer account on the any side of payment process. for example
            it may be account in project, account in payment system, payer email and
            etc
          in: query
          name: account
          type: string
        - description: start date when payment was closed to get orders filtered by
            they
          in: query
          name: pm_date_from
          type: integer
        - description: end date when payment was closed to get orders filtered by they
          in: query
          name: pm_date_to
          type: integer
        - description: start date when payment was created to get orders filtered by
            they
          in: query
          name: project_date_from
          type: integer
        - description: end date when payment was closed in project to get orders filtered
            by they
          in: query
          name: project_date_to
          type: integer
        - description: maximum number of returning orders. default value is 100
          in: query
          name: limit
          type: integer
        - description: offset from which you want to return the list of orders. default
            value is 0
          in: query
          name: offset
          type: integer
        - description: query array of fields list for sorting
          in: query
          name: sort[]
          type: string
        - description: multiple field search string - order unique identifier, user external identifier,
            project order identifier, project name, payment method name
          in: query
          name: quick_search
          type: string
        - description: query array of merchant identifier list
          in: query
          name: merchant
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/order.list.public'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Object with error message
          schema:
            $ref: '#/definitions/model.Error'
      summary: Get orders
      tags:
        - Order
  /admin/api/v1/order/{id}:
    get:
      consumes:
        - application/json
      description: Get full object with order data
      parameters:
        - description: Order unique identifier
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/order.public'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Object with error message
          schema:
            $ref: '#/definitions/model.Error'
      summary: Get order data
      tags:
        - Order
  /api/v1/s/order/accounting_payment:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: accounting payment by accounting period of merchant
      parameters:
        - description: period start in unix timestamp
          in: query
          name: from
          required: true
          type: integer
        - description: period end in unix timestamp
          in: query
          name: to
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.AccountingPayment'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Object with error message
          schema:
            $ref: '#/definitions/model.Error'
      summary: Get accounting payment amounts by accounting period of merchant
      tags:
        - Payment Order
  /api/v1/s/order/revenue_dynamic/{period}:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Get revenue dynamics by merchant or project
      parameters:
        - description: 'period to group revenue dynamics data. now allowed next values:
          hour, day, week, month, year'
          in: path
          name: period
          required: true
          type: string
        - description: period start in unix timestamp
          in: query
          name: from
          required: true
          type: integer
        - description: period end in unix timestamp
          in: query
          name: to
          required: true
          type: integer
        - description: query array of list of projects to calculate dynamics of revenue
          in: query
          name: project[]
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.RevenueDynamicResult'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Object with error message
          schema:
            $ref: '#/definitions/model.Error'
      summary: Get revenue dynamics
      tags:
        - Payment Order
  /admin/api/v1/projects:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Get list of project for authenticated merchant
      produces:
        - application/json
      parameters:
        - description: merchant identifier
          in: query
          name: merchant_id
          type: string
        - description: string to quick search by project name
          in: query
          name: quick_search
          type: string
        - description: array of project statuses
          in: query
          name: status
          type: array
          items:
            type: integer
        - description: fields list for sorting
          in: query
          name: sort
          type: array
          items:
            type: string
        - description: maximum number of returning records. default value is 100
          in: query
          name: limit
          type: integer
        - description: offset from which you want to return the list of records. default value is 0
          in: query
          name: offset
          type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Project'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error
          schema:
            $ref: '#/definitions/model.Error'
      summary: List projects
      tags:
        - Project
    post:
      consumes:
        - application/json
      description: Create new project for authenticated merchant
      parameters:
        - description: Creating project data
          in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/projects.CreateRequest'
            type: object
      produces:
        - application/json
      responses:
        "201":
          description: OK
          schema:
            $ref: '#/definitions/model.Project'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error
          schema:
            $ref: '#/definitions/model.Error'
      summary: Create project
      tags:
        - Project
  /admin/api/v1/projects/{id}:
    delete:
      consumes:
        - application/x-www-form-urlencoded
      description: Deactivation project for authenticated merchant
      parameters:
        - description: Project identifier
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error
          schema:
            $ref: '#/definitions/model.Error'
      summary: Delete project
      tags:
        - Project
    get:
      consumes:
        - application/json
      description: '"Get data about project"'
      parameters:
        - description: Project identifier
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Project'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Project not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error
          schema:
            $ref: '#/definitions/model.Error'
      summary: Get project
      tags:
        - Project
    patch:
      consumes:
        - application/json
      description: Update project for authenticated merchant
      parameters:
        - description: Project object with new data
          in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/model.Project'
            type: object
        - description: Project identifier
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Project'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error
          schema:
            $ref: '#/definitions/model.Error'
      summary: Update project
      tags:
        - Project
  /order/create:
    get:
      consumes:
        - multipart/form-data
        - application/x-www-form-urlencoded
      description: Create a payment order use GET or POST HTML form
      parameters:
        - description: Project unique identifier in Protocol One payment solution
          in: query
          name: PP_PROJECT_ID
          required: true
          type: string
        - description: Order amount
          in: query
          name: PP_AMOUNT
          required: true
          type: number
        - description: User unique account in project
          in: query
          name: PP_ACCOUNT
          required: true
          type: string
        - description: Unique order identifier in project. This field not required,
            BUT we're recommend send this field always
          in: query
          name: PP_ORDER_ID
          type: string
        - description: Payment method identifier in Protocol One payment solution
          in: query
          name: PP_PAYMENT_METHOD
          type: string
        - description: Order description. If this field not send in request, then we're
            create standard order description
          in: query
          name: PP_DESCRIPTION
          type: string
        - description: Order currency by ISO 4217 (3 chars). If this field send, then
            we're process amount in this currency
          in: query
          name: PP_CURRENCY
          type: string
        - description: User (payer) region code by ISO 3166-1 (2 chars) for check project
            packages. If this field not send, then user region will be get from user
            ip
          in: query
          name: PP_REGION
          type: string
        - description: User (payer) email
          in: query
          name: PP_PAYER_EMAIL
          type: string
        - description: User (payer) phone
          in: query
          name: PP_PAYER_PHONE
          type: string
        - description: URL for payment data verification request to project. This field
            can be send if it allowed in project admin panel
          in: query
          name: PP_URL_VERIFY
          type: string
        - description: URL for payment notification request to project. This field can
            be send if it allowed in project admin panel
          in: query
          name: PP_URL_NOTIFY
          type: string
        - description: URL for redirect user after successfully completed payment. This
            field can be send if it allowed in project admin panel
          in: query
          name: PP_URL_SUCCESS
          type: string
        - description: URL for redirect user after failed payment. This field can be
            send if it allowed in project admin panel
          in: query
          name: PP_URL_FAIL
          type: string
        - description: Signature of request to verify that the data has not been changed.
            This field not required, BUT we're recommend send this field always
          in: query
          name: PP_SIGNATURE
          type: string
        - description: Any fields on the project side that do not match the names of
            the reserved fields
          in: query
          name: Other
          type: string
      produces:
        - text/html
      responses:
        "302":
          description: Redirect user to form entering payment requisites
          schema:
            type: string
        "400":
          description: Redirect user to page with error description
          schema:
            type: string
        "500":
          description: Redirect user to page with error description
          schema:
            type: string
      summary: Create order with HTML form
      tags:
        - Payment Order
    post:
      consumes:
        - multipart/form-data
        - application/x-www-form-urlencoded
      description: Create a payment order use GET or POST HTML form
      parameters:
        - description: Project unique identifier in Protocol One payment solution
          in: query
          name: PP_PROJECT_ID
          required: true
          type: string
        - description: Order amount
          in: query
          name: PP_AMOUNT
          required: true
          type: number
        - description: User unique account in project
          in: query
          name: PP_ACCOUNT
          required: true
          type: string
        - description: Unique order identifier in project. This field not required,
            BUT we're recommend send this field always
          in: query
          name: PP_ORDER_ID
          type: string
        - description: Payment method identifier in Protocol One payment solution
          in: query
          name: PP_PAYMENT_METHOD
          type: string
        - description: Order description. If this field not send in request, then we're
            create standard order description
          in: query
          name: PP_DESCRIPTION
          type: string
        - description: Order currency by ISO 4217 (3 chars). If this field send, then
            we're process amount in this currency
          in: query
          name: PP_CURRENCY
          type: string
        - description: User (payer) region code by ISO 3166-1 (2 chars) for check project
            packages. If this field not send, then user region will be get from user
            ip
          in: query
          name: PP_REGION
          type: string
        - description: User (payer) email
          in: query
          name: PP_PAYER_EMAIL
          type: string
        - description: User (payer) phone
          in: query
          name: PP_PAYER_PHONE
          type: string
        - description: URL for payment data verification request to project. This field
            can be send if it allowed in project admin panel
          in: query
          name: PP_URL_VERIFY
          type: string
        - description: URL for payment notification request to project. This field can
            be send if it allowed in project admin panel
          in: query
          name: PP_URL_NOTIFY
          type: string
        - description: URL for redirect user after successfully completed payment. This
            field can be send if it allowed in project admin panel
          in: query
          name: PP_URL_SUCCESS
          type: string
        - description: URL for redirect user after failed payment. This field can be
            send if it allowed in project admin panel
          in: query
          name: PP_URL_FAIL
          type: string
        - description: Signature of request to verify that the data has not been changed.
            This field not required, BUT we're recommend send this field always
          in: query
          name: PP_SIGNATURE
          type: string
        - description: Any fields on the project side that do not match the names of
            the reserved fields
          in: query
          name: Other
          type: string
      produces:
        - text/html
      responses:
        "302":
          description: Redirect user to form entering payment requisites
          schema:
            type: string
        "400":
          description: Redirect user to page with error description
          schema:
            type: string
        "500":
          description: Redirect user to page with error description
          schema:
            type: string
      summary: Create order with HTML form
      tags:
        - Payment Order
  /api/v1/s/payment_method:
    post:
      consumes:
        - application/json
      description: Create a payment method for payment system
      parameters:
        - description: product method properties
          in: body
          name: body
          schema:
            $ref: '#/definitions/payment_method.PostProductMethod'
            type: object
      produces:
        - text/html
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/payment_method.ChangePaymentMethodResponse'
            type: array
        "400":
          description: Error description
          schema:
            type: string
      summary: Create a payment method for payment system
      tags:
        - Payment Method
  /api/v1/s/payment_method/{id}:
    put:
      consumes:
        - application/json
      description: Update a payment method for payment system
      parameters:
        - description: paymentmethod identifier
          in: path
          name: id
          required: true
          type: string
        - description: product method properties
          in: body
          name: body
          schema:
            $ref: '#/definitions/payment_method.PutProductMethod'
            type: object
      produces:
        - text/html
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/payment_method.ChangePaymentMethodResponse'
            type: array
        "400":
          description: Error description
          schema:
            type: string
      summary: Update a payment method for payment system
      tags:
        - Payment Method
  /api/v1/s/payment_method/{id}/production:
    post:
      consumes:
        - application/json
      description: Add production settings to the payment method
      parameters:
        - description: paymentmethod identifier
          in: path
          name: id
          required: true
          type: string
        - description: payment method params
          in: body
          name: body
          schema:
            $ref: '#/definitions/payment_method.UpdatePaymentMethodParams'
            type: object
      produces:
        - text/html
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/payment_method.ChangePaymentMethodParamsResponse'
            type: array
        "400":
          description: Error description
          schema:
            type: string
      summary: Add production settings to the payment method
      tags:
        - Payment Method
    put:
      consumes:
        - application/json
      description: Update production settings to the payment method
      parameters:
        - description: payment method identifier
          in: path
          name: id
          required: true
          type: string
        - description: payment method params
          in: body
          name: body
          schema:
            $ref: '#/definitions/payment_method.UpdatePaymentMethodParams'
            type: object
      produces:
        - text/html
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/payment_method.ChangePaymentMethodParamsResponse'
            type: array
        "400":
          description: Error description
          schema:
            type: string
      summary: Update production settings to the payment method
      tags:
        - Payment Method
    get:
      consumes:
        - application/json
      description: Get production settings to the payment method
      parameters:
        - description: payment method identifier
          in: path
          name: id
          type: string
          required: true
      produces:
        - text/html
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/payment_method.PaymentMethodParams'
            type: array
        "400":
          description: Error description
          schema:
            type: string
      summary: Get production settings to the payment method
      tags:
        - Payment Method
    delete:
      consumes:
        - application/json
      description: Delete production settings to the payment method
      parameters:
        - description: payment method identifier
          in: path
          name: id
          type: string
          required: true
        - description: code of currency
          in: query
          name: currency_a3
          type: string
          required: true
      produces:
        - text/html
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/payment_method.ChangePaymentMethodParamsResponse'
            type: array
        "400":
          description: Error description
          schema:
            type: string
      summary: Delete production settings to the payment method
      tags:
        - Payment Method
  /api/v1/s/payment_method/{id}/test:
    post:
      consumes:
        - application/json
      description: Add test settings to the payment method
      parameters:
        - description: paymentmethod identifier
          in: path
          name: id
          required: true
          type: string
        - description: payment method params
          in: body
          name: body
          schema:
            $ref: '#/definitions/payment_method.UpdatePaymentMethodParams'
            type: object
      produces:
        - text/html
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/payment_method.ChangePaymentMethodParamsResponse'
            type: array
        "400":
          description: Error description
          schema:
            type: string
      summary: Add test settings to the payment method
      tags:
        - Payment Method
    put:
      consumes:
        - application/json
      description: Update test settings to the payment method
      parameters:
        - description: paymentmethod identifier
          in: path
          name: id
          required: true
          type: string
        - description: payment method params
          in: body
          name: body
          schema:
            $ref: '#/definitions/payment_method.UpdatePaymentMethodParams'
            type: object
      produces:
        - text/html
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/payment_method.ChangePaymentMethodParamsResponse'
            type: array
        "400":
          description: Error description
          schema:
            type: string
      summary: Update test settings to the payment method
      tags:
        - Payment Method
    get:
      consumes:
        - application/json
      description: Get test settings to the payment method
      parameters:
        - description: payment method identifier
          in: path
          name: id
          type: string
          required: true
      produces:
        - text/html
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/payment_method.PaymentMethodParams'
            type: array
        "400":
          description: Error description
          schema:
            type: string
      summary: Get test settings to the payment method
      tags:
        - Payment Method
    delete:
      consumes:
        - application/json
      description: Delete test settings to the payment method
      parameters:
        - description: payment method identifier
          in: path
          name: id
          type: string
          required: true
        - description: code of currency
          in: query
          name: currency_a3
          type: string
          required: true
      produces:
        - text/html
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/payment_method.ChangePaymentMethodParamsResponse'
            type: array
        "400":
          description: Error description
          schema:
            type: string
      summary: Delete test settings to the payment method
      tags:
        - Payment Method
  /api/v1/s/price_group/country:
    get:
      consumes:
        - application/json
      description: Get region and currency by country
      parameters:
        - description: two-letter code of country
          in: query
          name: country
          type: string
          required: true
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/price_group.CurrencyRegion'
            type: array
        "400":
          description: Error description
          schema:
            type: string
      summary: Get region and currency by country
      tags:
        - Price group
  /api/v1/s/price_group/currencies:
    get:
      description: Get a list of all currencies with regions and countries in them
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/price_group.CurrencyListResponse'
            type: array
        "400":
          description: Error description
          schema:
            type: string
      summary: Get a list of all currencies with regions and countries in them
      tags:
        - Price group
  /api/v1/s/price_group/region:
    get:
      consumes:
        - application/json
      description: Get currency for a region and a list of countries in it
      parameters:
        - description: name of region
          in: query
          name: region
          type: string
          required: true
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/price_group.CurrencyListResponse'
            type: array
        "400":
          description: Error description
          schema:
            type: string
      summary: Get currency for a region and a list of countries in it
      tags:
        - Price group
  /api/v1/s/price_group/recommended:
    get:
      consumes:
        - application/json
      description: Get recommended prices for regions
      parameters:
        - description: base price in USD
          in: query
          name: amount
          type: string
          required: true
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/price_group.RecommendedPriceResponse'
            type: array
        "400":
          description: Error description
          schema:
            type: string
      summary: Get recommended prices for regions
      tags:
        - Price group

  "/admin/api/v1/merchants":
    get:
      summary: Get list of merchants
      tags:
        - Onboarding
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      description: Get list of merchants
      parameters:
        - description: string to quick search by merchant name or user owner email
          in: query
          name: quick_search
          type: string
        - description: merchant name
          in: query
          name: name
          type: string
        - description: query parameter to return merchants with full signed agreement
          in: query
          name: is_signed
          type: boolean
        - description: start date to filter merchants by last payout date. parameter format must be a unix timestamp
          in: query
          name: last_payout_date_from
          type: integer
        - description: end date to filter merchants by last payout date. parameter format must be a unix timestamp
          in: query
          name: last_payout_date_to
          type: integer
        - description: last payout amount
          in: query
          name: last_payout_amount
          type: integer
        - description: array of merchant statuses
          in: query
          name: status
          type: array
          items:
            type: integer
        - description: maximum number of returning orders. default value is 100
          in: query
          name: limit
          type: integer
        - description: offset from which you want to return the list of orders. default value is 0
          in: query
          name: offset
          type: integer
        - description: fields list for sorting
          in: query
          name: sort[]
          type: string
        - description: start date to filter merchants by owner regiatration date. unix timestamp value in seconds
          in: query
          name: registration_date_from
          type: integer
        - description: end date to filter merchants by owner regiatration date. unix timestamp value in seconds
          in: query
          name: registration_date_to
          type: integer
        - description: start date to filter merchants by date when licanse agreement was signed by merchant owner. unix timestamp value in seconds
          in: query
          name: received_date_from
          type: integer
        - description: end date to filter merchants by date when licanse agreement was signed by merchant owner. unix timestamp value in seconds
          in: query
          name: received_date_to
          type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/onboarding.Merchant'
            type: array
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/merchants/{id}":
    get:
      summary: Get merchant by identifier
      tags:
        - Onboarding
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      description: Get list of merchants
      parameters:
        - description: merchant identifier
          in: path
          name: id
          type: string
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.Merchant'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'
    patch:
      summary: Change merchant information
      tags:
        - Onboarding
      consumes:
        - application/json
      produces:
        - application/json
      description: Change merchant agreement information
      parameters:
        - description: merchant identifier
          in: path
          name: id
          type: string
          required: true
        - description: data for change
          in: body
          name: data
          schema:
            $ref: '#/definitions/onboarding.Merchant.ChangeAgreementDataRequest'
            type: object
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.Merchant'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/merchants/user":
    get:
      summary: Get user merchant
      tags:
        - Onboarding
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      description: Get user merchant
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.Merchant'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/merchants/{id}/change-status":
    put:
      summary: Change merchant status
      tags:
        - Onboarding
      consumes:
        - application/json
      produces:
        - application/json
      description: Change merchant status
      parameters:
        - description: merchant identifier
          in: path
          name: id
          type: string
          required: true
        - description: Data required to change status
          in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/onboarding.Merchant.ChangeStatus'
            type: object
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.Merchant'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/merchants/{merchant_id}/notifications":
    get:
      summary: Get list of notifications to merchant
      tags:
        - Onboarding
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      description: Get list of notifications to merchant
      parameters:
        - description: merchant identifier
          in: path
          name: merchant_id
          type: string
          required: true
        - description: user who sent notification
          in: query
          name: user
          type: string
        - description: "flag to filter return notification: 0 - return only notification; 1 - return only history"
          in: query
          name: is_system
          type: integer
        - description: limit of returning records
          in: query
          name: limit
          type: integer
        - description: offset of returning records
          in: query
          name: offset
          type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/onboarding.Merchant.Notifications'
            type: array
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'
    post:
      summary: Create new notification
      tags:
        - Onboarding
      consumes:
        - application/json
      produces:
        - application/json
      description: Create new notification
      parameters:
        - description: merchant identifier
          in: path
          name: merchant_id
          type: string
          required: true
        - description: Notification data
          in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/onboarding.Merchant.Notification.CreateRequest'
            type: object
      responses:
        "201":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.Merchant.Notification'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/merchants/{merchant_id}/notifications/{notification_id}":
    get:
      summary: Get notification by identifier
      tags:
        - Onboarding
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      description: Get notification by identifier
      parameters:
        - description: merchant identifier
          in: path
          name: merchant_id
          type: string
          required: true
        - description: notification identifier
          in: path
          name: notification_id
          type: string
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.Merchant.Notification'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/merchants/{merchant_id}/notifications/{notification_id}/mark-as-read":
    put:
      summary: Mark notification as readed
      tags:
        - Onboarding
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      description: Mark notification as readed
      parameters:
        - description: merchant identifier
          in: path
          name: merchant_id
          type: string
          required: true
        - description: notification identifier
          in: path
          name: notification_id
          type: string
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.Merchant.Notification'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/merchants/{id}/agreement-type":
    patch:
      summary: Set merchant agreement type
      tags:
        - Onboarding
      consumes:
        - application/json
      produces:
        - application/json
      description: Set merchant agreement type
      parameters:
        - description: merchant identifier
          in: path
          name: id
          type: string
          required: true
        - description: data to change agreement type
          in: body
          name: data
          schema:
            $ref: '#/definitions/onboarding.Merchant.ChangeAgreementType.Request'
            type: object
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.Merchant'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/taxes":
    get:
      summary: List all available tax rates in the system
      tags:
        - Tax
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      description: List all available tax rates in the system
      parameters:
        - description: country to filter response
          in: query
          name: country
          type: string
        - description: city to filter response
          in: query
          name: city
          type: string
        - description: state to filter response
          in: query
          name: state
          type: string
        - description: zip to filter response
          in: query
          name: zip
          type: string
        - description: maximum number of returning orders. default value is 100
          in: query
          name: limit
          type: integer
        - description: offset from which you want to return the list of orders. default value is 0
          in: query
          name: offset
          type: integer
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              type: object
              $ref: '#/definitions/taxes.TaxRate'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'
    post:
      summary: Upsert tax rate data.
      tags:
        - Tax
      consumes:
        - application/json
      produces:
        - application/json
      description: Create or update tax rate data.
      parameters:
        - description: Object to upsert
          in: body
          name: data
          schema:
            $ref: '#/definitions/taxes.TaxRate'
            type: object
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/taxes.TaxRate'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'
  "/admin/api/v1/taxes/{id}":
    delete:
      summary: Delete tax rate object
      description: Mark tax rate object as deleted
      tags:
        - Tax
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: tax rate object id
          in: path
          name: id
          type: string
          required: true
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/order/{order_id}/refunds":
    get:
      summary: Get list of refunds to order
      tags:
        - Order
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      description: Get list of refunds to order
      parameters:
        - description: order identifier
          in: path
          name: order_id
          type: string
          required: true
        - description: count of records to need to return
          in: query
          name: limit
          type: string
          required: true
        - description: number of record which must be first in listing
          in: query
          name: offset
          type: string
          required: true
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/order.Refund'
            type: array
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'
    post:
      summary: Create new refund to order
      tags:
        - Order
      consumes:
        - application/json
      produces:
        - application/json
      description: Create new refund to order
      parameters:
        - description: order identifier
          in: path
          name: order_id
          type: string
          required: true
        - description: refund data
          in: body
          name: data
          schema:
            $ref: '#/definitions/order.Refund.CreateRequest'
            type: object
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/order.Refund'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/order/{order_id}/refunds/{refund_id}":
    get:
      summary: Get refund data
      tags:
        - Order
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      description: Get refund data
      parameters:
        - description: order identifier
          in: path
          name: order_id
          type: string
          required: true
        - description: refund identifier
          in: path
          name: refund_id
          type: string
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/order.Refund'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/merchants/{id}/agreement":
    get:
      summary: Generate agreement
      tags:
        - Onboarding
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      description: Generate agreement for merchant and return data about printable agreement
      parameters:
        - description: merchant identifier
          in: path
          name: id
          type: string
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.Merchant.PrintableAgreementData.Response'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/merchants/{id}/agreement/document":
    get:
      summary: Download merchant agreement
      tags:
        - Onboarding
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/pdf
      description: Download merchant agreement
      parameters:
        - description: merchant identifier
          in: path
          name: id
          type: string
          required: true
      responses:
        "200":
          description: OK
          schema:
            type: file
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'
    post:
      summary: Upload merchant agreement
      tags:
        - Onboarding
      consumes:
        - multipart/form-data
      produces:
        - application/json
      description: Upload new version of merchant agreement
      parameters:
        - description: merchant identifier
          in: path
          name: id
          type: string
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.Merchant.PrintableAgreementData.Response'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/api/v1/tokens":
    post:
      security:
        - XAPISignatureHeader: []
      summary: Create token
      tags:
        - Token
      consumes:
        - application/json
      produces:
        - application/json
      description: Create token for process payment token create
      parameters:
        - description: Data to process payment
          in: body
          name: data
          schema:
            $ref: '#/definitions/token.TokenRequest'
            type: object
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/token.TokenResponse'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/products/:id/prices":
    get:
      security:
        - XAPISignatureHeader: []
      summary: Get product prices
      tags:
        - Product
      consumes:
        - application/json
      produces:
        - application/json
      description: Get product prices
      parameters:
        - description: id of product
          in: query
          name: id
          type: string
          required: true
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/product.Price'
            type: array
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'
    put:
      security:
        - XAPISignatureHeader: []
      summary: Set product prices
      tags:
        - Product
      consumes:
        - application/json
      produces:
        - application/json
      description: Set product prices
      parameters:
        - description: price properties
          in: body
          name: body
          schema:
            $ref: '#/definitions/product.PutPrice'
            type: object
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Error'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/user/profile":
    get:
      summary: Get user profile
      tags:
        - User Profile
      consumes:
        - application/json
      produces:
        - application/json
      description: Get user profile
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userProfile.response'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'
    patch:
      summary: Create or update user profile
      tags:
        - User Profile
      consumes:
        - application/json
      produces:
        - application/json
      description: Create or update user profile
      parameters:
        - description: User profile information
          in: body
          name: data
          schema:
            $ref: '#/definitions/userProfile.request'
            type: object
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userProfile.response'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/api/v1/user/confirm_email":
    put:
      summary: Confirm user email
      tags:
        - User Profile
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      description: Confirm user email by token
      parameters:
        - description: object contained confirmation token
          in: body
          name: data
          schema:
            $ref: '#/definitions/user.confirmEmail.request'
            type: object
          required: true
      responses:
        "200":
          description: OK
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/user/profile/{id}":
    get:
      summary: Get user profile by proifile identifier
      tags:
        - User Profile
      consumes:
        - application/json
      produces:
        - application/json
      description: Get user profile by profile identifier
      parameters:
        - description: profile identifier
          in: path
          name: id
          type: string
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userProfile.response'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/user/feedback":
    post:
      summary: Create page review
      tags:
        - User Profile
      consumes:
        - application/json
      produces:
        - application/json
      description: Create page feedback
      parameters:
        - description: review body
          in: body
          name: data
          schema:
            $ref: '#/definitions/pageReview.request'
            type: object
          required: true
      responses:
        "200":
          description: OK
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/merchants/{id}/agreement/signature":
    put:
      summary: Get data to sign agreement
      tags:
        - Onboarding
      consumes:
        - application/json
      produces:
        - application/json
      description: Get data to sign license agreement with hellosign api
      parameters:
        - description: merchant identifier for which creating signature request
          in: path
          name: id
          required: true
          type: string
        - description: body
          in: body
          name: data
          schema:
            $ref: '#/definitions/onboarding.merchant.signatureRequest'
            type: object
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.merchant.signatureResponse'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/merchants/company":
    put:
      summary: Set company information
      tags:
        - Onboarding
      consumes:
        - application/json
      produces:
        - application/json
      description: Set company information
      parameters:
        - description: request body
          in: body
          name: data
          schema:
            $ref: '#/definitions/onboarding.Company'
            type: object
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.Merchant'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/merchants/{id}/company":
    put:
      summary: Set company information
      tags:
        - Onboarding
      consumes:
        - application/json
      produces:
        - application/json
      description: Set company information
      parameters:
        - description: merchant identifier
          in: path
          name: id
          required: true
          type: string
        - description: request body
          in: body
          name: data
          schema:
            $ref: '#/definitions/onboarding.Company'
            type: object
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.Merchant'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/merchants/contacts":
    put:
      summary: Set contacts information
      tags:
        - Onboarding
      consumes:
        - application/json
      produces:
        - application/json
      description: Set contacts information
      parameters:
        - description: request body
          in: body
          name: data
          schema:
            $ref: '#/definitions/onboarding.Contacts'
            type: object
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.Merchant'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/merchants/{id}/contacts":
    put:
      summary: Set contacts information
      tags:
        - Onboarding
      consumes:
        - application/json
      produces:
        - application/json
      description: Set contacts information
      parameters:
        - description: merchant identifier
          in: path
          name: id
          required: true
          type: string
        - description: request body
          in: body
          name: data
          schema:
            $ref: '#/definitions/onboarding.Contacts'
            type: object
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.Merchant'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/merchants/banking":
    put:
      summary: Set banking information
      tags:
        - Onboarding
      consumes:
        - application/json
      produces:
        - application/json
      description: Set banking information
      parameters:
        - description: request body
          in: body
          name: data
          schema:
            $ref: '#/definitions/onboarding.Banking'
            type: object
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.Merchant'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/merchants/{id}/banking":
    put:
      summary: Set banking information
      tags:
        - Onboarding
      consumes:
        - application/json
      produces:
        - application/json
      description: Set banking information
      parameters:
        - description: merchant identifier
          in: path
          name: id
          required: true
          type: string
        - description: request body
          in: body
          name: data
          schema:
            $ref: '#/definitions/onboarding.Banking'
            type: object
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.Merchant'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/merchants/tariffs":
    get:
      summary: Get tariff rates
      tags:
        - Onboarding
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      description: Get tariff rates
      parameters:
        - description: "region name. possible values: cis, russia, west_asia, eu, north_america, central_america, south_america, uk, worldwide, south_pacific"
          in: query
          name: region
          type: string
          required: true
        - description: "merchant payout currency. 3 letters code by ISO 4217"
          in: query
          name: payout_currency
          type: string
          required: true
        - description: "merchant start amount of turnover"
          in: query
          name: amount_from
          type: number
          required: false
        - description: "merchant end amount of turnover"
          in: query
          name: amount_to
          type: number
          required: false
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.Tariff'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/merchants/{id}/tariffs":
    post:
      summary: Set tariff rates to merchant
      tags:
        - Onboarding
      consumes:
        - application/json
      produces:
        - application/json
      description: Set tariff rates to merchant
      parameters:
        - description: merchant identifier
          in: path
          name: id
          type: string
          required: true
        - description: request body
          in: body
          schema:
            $ref: '#/definitions/onboarding.Tariff.Set.Request'
            type: object
          name: data
          required: true
      responses:
        "200":
          description: OK
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/merchants/{id}/status":
    get:
      summary: Get data fill status
      tags:
        - Onboarding
      consumes:
        - application/json
      produces:
        - application/json
      description: Get data fill status
      parameters:
        - description: merchant identifier
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.merchant.fillStatus'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/order/{order_id}/replace_code":
    put:
      summary: Replaces activation code in order
      tags:
        - Order
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: order identifier
          in: path
          name: order_id
          type: string
          required: true
        - description: Order change request
          in: body
          name: data
          schema:
            type: object
            properties:
              key_product_id:
                type: string
          required: true
      description: Replaces activation code in order
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/order.public'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/payment_costs/channel/system/all":
    get:
      summary: Get all system costs for payments
      tags:
        - Onboarding
      consumes:
        - application/json
      produces:
        - application/json
      description: Get all system costs for payments
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.cost.payment.system.all'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/payment_costs/channel/merchant/{id}/all":
    get:
      summary: Get all merchant costs for payments operations
      tags:
        - Onboarding
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: merchant identifier
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.cost.payment.merchant.all'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/payment_costs/money_back/system/all":
    get:
      summary: Get all system costs for money back operations
      tags:
        - Onboarding
      consumes:
        - application/json
      produces:
        - application/json
      description: Get all system costs for money back operations
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.cost.money_back.system.all'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/payment_costs/money_back/merchant/{id}/all":
    get:
      summary: Get all merchant costs for money back operations
      tags:
        - Onboarding
      consumes:
        - application/json
      produces:
        - application/json
      description: Get all merchant costs for money back operations
      parameters:
        - description: merchant identifier
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.cost.money_back.merchant.all'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/payment_costs/channel/system":
    get:
      summary: Get system costs for payment operations
      tags:
        - Onboarding
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      description: Get system costs for payment operations
      parameters:
        - description: "payment method name"
          in: query
          name: name
          type: string
          required: true
        - description: "region name. possible values: CIS, Russia, West Asia, EU, North America, Central America, South America, United Kingdom, Worldwide, South Pacific"
          in: query
          name: region
          type: string
          required: true
        - description: "two-letter country code by ISO 3166-1"
          in: query
          name: country
          type: string
          required: false
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.cost.payment.system'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'
    post:
      summary: Create system costs for payments operations
      tags:
        - Onboarding
      consumes:
        - application/json
      produces:
        - application/json
      description: Create system costs for payments operations
      parameters:
        - description: data
          in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/onboarding.cost.payment.system.create'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.cost.payment.system'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/payment_costs/channel/merchant/{id}":
    get:
      summary: Get merchant costs for payment operations
      tags:
        - Onboarding
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      description: Get merchant costs for payment operations
      parameters:
        - description: merchant unique identifier
          in: path
          name: id
          type: string
          required: true
        - description: "payment method name"
          in: query
          name: name
          type: string
          required: true
        - description: "region name. possible regions: CIS, Russia, West Asia, EU, North America, Central America, South America, United Kingdom, Worldwide, South Pacific"
          in: query
          name: region
          type: string
          required: true
        - description: "two-letter country code by ISO 3166-1"
          in: query
          name: country
          type: string
          required: false
        - description: payout currency. 3 lettre code by ISO 4217
          in: query
          type: string
          name: payout_currency
          required: true
        - description: min payment amount
          in: query
          type: number
          name: amount
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.cost.payment.merchant'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'
    post:
      summary: Create merchant costs for payments operations
      tags:
        - Onboarding
      consumes:
        - application/json
      produces:
        - application/json
      description: Create merchant costs for payments operations
      parameters:
        - description: merchant unique identifier
          in: path
          name: id
          type: string
          required: true
        - description: data
          in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/onboarding.cost.payment.merchant.create'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.cost.payment.merchant'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'
    delete:
      summary: Delete merchant costs for payment operations
      tags:
        - Onboarding
      consumes:
        - application/json
      produces:
        - application/json
      description: Delete merchant costs for payment operations
      parameters:
        - description: merchant cost identifier
          in: path
          name: id
          type: string
          required: true
      responses:
        "204":
          description: OK
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/payment_costs/money_back/system":
    get:
      summary: Get system costs for money back operations
      tags:
        - Onboarding
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      description: Get system costs for money back operations
      parameters:
        - description: payment method name
          in: query
          name: name
          type: string
          required: true
        - description: payout currency. 3 lettre code by ISO 4217
          in: query
          name: payout_currency
          type: string
          required: true
        - description: "money back type. available values: refund, reversal, chargeback"
          in: query
          name: undo_reason
          type: string
          required: true
        - description: region name
          in: query
          name: region
          type: string
          required: true
        - description: two-letter country code by ISO 3166-1
          in: query
          name: country
          type: string
          required: false
        - description: number of days after payment operation
          in: query
          name: days
          type: number
          required: true
        - description: payment stage
          in: query
          name: payment_stage
          type: number
          required: false
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.cost.money_back.system'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'
    post:
      summary: Create system costs for money back operations
      tags:
        - Onboarding
      consumes:
        - application/json
      produces:
        - application/json
      description: Create system costs for money back operations
      parameters:
        - description: data
          in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/onboarding.cost.money_back.system.create'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.cost.money_back.system'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/payment_costs/money_back/merchant/{id}":
    get:
      summary: Get merchant costs for money back operations
      tags:
        - Onboarding
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      description: Get merchant costs for money back operations
      parameters:
        - description: merchant identifier
          in: path
          name: id
          type: string
          required: true
        - description: payment method name
          in: query
          name: name
          type: string
          required: true
        - description: payout currency. 3 lettre code by ISO 4217
          in: query
          name: payout_currency
          type: string
          required: true
        - description: "money back type. available values: refund, reversal, chargeback"
          in: query
          name: undo_reason
          type: string
          required: true
        - description: region name
          in: query
          name: region
          type: string
          required: true
        - description: two-letter country code by ISO 3166-1
          in: query
          name: country
          type: string
          required: false
        - description: number of days after payment operation
          in: query
          name: days
          type: number
          required: true
        - description: payment stage
          in: query
          name: payment_stage
          type: number
          required: false
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.cost.money_back.merchant'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'
    post:
      summary: Create merchant costs for money back operations
      tags:
        - Onboarding
      consumes:
        - application/json
      produces:
        - application/json
      description: Create merchant costs for money back operations
      parameters:
        - description: merchant unique identifier
          in: path
          name: id
          type: string
          required: true
        - description: data
          in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/onboarding.cost.money_back.merchant.create'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.cost.money_back.merchant'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'
    delete:
      summary: Delete merchant costs for money back operations
      tags:
        - Onboarding
      consumes:
        - application/json
      produces:
        - application/json
      description: Delete merchant costs for money back operations
      parameters:
        - description: merchant cost identifier
          in: path
          name: id
          type: string
          required: true
      responses:
        "204":
          description: OK
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/payment_costs/channel/system/{id}":
    put:
      summary: Update system costs for payment operations
      tags:
        - Onboarding
      consumes:
        - application/json
      produces:
        - application/json
      description: Update system costs for payment operations
      parameters:
        - description: cost record identifier
          in: path
          name: id
          type: string
          required: true
        - description: data
          in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/onboarding.cost.payment.system.create'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.cost.payment.system'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'
    delete:
      summary: Delete system costs for payment operations
      tags:
        - Onboarding
      consumes:
        - application/json
      produces:
        - application/json
      description: Delete system costs for payment operations
      parameters:
        - description: system cost identifier
          in: path
          name: id
          type: string
          required: true
      responses:
        "204":
          description: OK
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/payment_costs/money_back/system/{id}":
    put:
      summary: Update system costs for money back operations
      tags:
        - Onboarding
      consumes:
        - application/json
      produces:
        - application/json
      description: Update system costs for money back operations
      parameters:
        - description: system cost identifier
          in: path
          name: id
          type: string
          required: true
        - description: data
          in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/onboarding.cost.money_back.system.create'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.cost.money_back.system'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'
    delete:
      summary: Delete system costs for money back operations
      tags:
        - Onboarding
      consumes:
        - application/json
      produces:
        - application/json
      description: Delete system costs for money back operations
      parameters:
        - description: system cost identifier
          in: path
          name: id
          type: string
          required: true
      responses:
        "204":
          description: OK
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/payment_costs/channel/merchant/{merchant_id}/{cost_id}":
    put:
      summary: Update merchant costs for payments operations
      tags:
        - Onboarding
      consumes:
        - application/json
      produces:
        - application/json
      description: Create merchant costs for payments operations
      parameters:
        - description: merchant unique identifier
          in: path
          name: merchant_id
          type: string
          required: true
        - description: cost record unique identifier
          in: path
          name: cost_id
          type: string
          required: true
        - description: data
          in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/onboarding.cost.payment.merchant.create'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.cost.payment.merchant'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/payment_costs/money_back/merchant/{merchant_id}/{cost_id}":
    put:
      summary: Update merchant costs for money back operations
      tags:
        - Onboarding
      consumes:
        - application/json
      produces:
        - application/json
      description: Update merchant costs for money back operations
      parameters:
        - description: merchant unique identifier
          in: path
          name: merchant_id
          type: string
          required: true
        - description: cost record unique identifier
          in: path
          name: cost_id
          type: string
          required: true
        - description: data
          in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/onboarding.cost.money_back.merchant.create'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/onboarding.cost.money_back.merchant'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/merchants/{id}/dashboard/main":
    get:
      summary: Get main reports data for dashboard
      tags:
        - Dashboard
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      description: "Get main reports dashboard block data, ie. next reports: gross revenue, total transactions, VAT, ARPU"
      parameters:
        - description: merchant unique identifier
          in: path
          name: id
          type: string
          required: true
        - description: "period name. now possible next values: current_month, previous_month, current_quarter, previous_quarter, current_year, previous_year"
          in: query
          name: period
          type: string
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dashboard.main_reports'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'


  "/admin/api/v1/merchants/{id}/dashboard/revenue_dynamics":
    get:
      summary: Get revenue dynamic report for dashboard
      tags:
        - Dashboard
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      description: Get revenue dynamic report for dashboard
      parameters:
        - description: merchant unique identifier
          in: path
          name: id
          type: string
          required: true
        - description: "period name. now possible next values: current_month, previous_month, current_quarter, previous_quarter, current_year, previous_year"
          in: query
          name: period
          type: string
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dashboard.revenue_dynamics'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/merchants/{id}/dashboard/base":
    get:
      summary: Get base reports data for dashboard
      tags:
        - Dashboard
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      description: "Get base reports dashboard block data, ie. next reports: revenue by country, sales today, sources"
      parameters:
        - description: merchant unique identifier
          in: path
          name: id
          type: string
          required: true
        - description: "period name. now possible next values: current_day, previous_day, current_week, previous_week, current_month, previous_month, current_quarter, previous_quarter, current_year, previous_year"
          in: query
          name: period
          type: string
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dashboard.base'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/api/v1/s/report_file":
    post:
      summary: Create report file
      tags:
        - ReportFile
      consumes:
        - application/json
      produces:
        - application/json
      description: Create report file
      parameters:
        - description: report file params
          in: body
          name: body
          schema:
            $ref: '#/definitions/report_file.CreateReportFileParams'
            type: object
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/report_file.CreateReportFileResponse'
            type: object
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/api/v1/s/report_file/download/{file}":
    get:
      summary: Download report file
      tags:
        - ReportFile
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/pdf
        - text/csv
        - application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
      description: Download report file
      parameters:
        - description: filename
          in: path
          name: file
          type: string
          required: true
        - description: identity of file and file type
          in: query
          name: file
          type: string
          required: true
      responses:
        "200":
          description: OK
          schema:
            type: file
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/balance":
    get:
      summary: Get balance for current user's merchant
      tags:
        - Balance
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      description: Get balance for current user's merchant
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/merchant_balance'
            type: array
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/balance/{merchant_id}":
    get:
      summary: Get balance for merchant with id passed in url
      tags:
        - Balance
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      description: Get balance for merchant with id passed in url
      parameters:
        - description: merchant identifier
          in: path
          name: merchant_id
          type: string
          required: true
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/merchant_balance'
            type: array
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/payout_documents":
    get:
      summary: Get list of payout documents, matched to filters (if any)
      tags:
        - Payouts
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      description: Get list of payout documents, matched to filters (if any)
      parameters:
        - description: payout document unique identifier
          in: query
          name: payout_document_id
          type: string
        - description: filter by document's status
          in: query
          name: status
          type: string
        - description: filter by document's merchant
          in: query
          name: merchant_id
          type: string
        - description: filter only signed documents, if true
          in: query
          name: signed
          type: boolean
        - description: limit documents per page
          in: query
          name: limit
          type: number
        - description: offset documents per page
          in: query
          name: offset
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/payout_documents_list'
        400:
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        403:
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        500:
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'
    post:
      summary: Create a payout document POST JSON request
      tags:
        - Payout
      consumes:
        - application/json
      description: Create a payout document POST JSON request
      parameters:
        - description: merchant identificator to create payout document for
          in: body
          name: body
          schema:
            $ref: '#/definitions/payout_documents_create'
            type: object
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/billingPayoutDocument'
        "400":
          description: Object with error message
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Object with error message
          schema:
            $ref: '#/definitions/model.Error'

  "/admin/api/v1/payout_documents/{id}":
    get:
      summary: Get payout document by id
      tags:
        - Payouts
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      description: Get payout document by id
      parameters:
        - description: payout document unique identifier
          in: path
          name: id
          type: string
          required: true
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/billingPayoutDocument'
        400:
          description: Invalid request data
          schema:
            $ref: '#/definitions/model.Error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.Error'
        403:
          description: Access denied
          schema:
            $ref: '#/definitions/model.Error'
        500:
          description: Some unknown error on server side
          schema:
            $ref: '#/definitions/model.Error'
    post:
      summary: Update a payout document POST JSON request
      tags:
        - Payout
      consumes:
        - application/json
      description: Update a payout document POST JSON request
      parameters:
        - description: update params
          in: body
          name: body
          schema:
            $ref: '#/definitions/payout_documents_update'
            type: object
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/billingPayoutDocument'
        "400":
          description: Object with error message
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Object with error message
          schema:
            $ref: '#/definitions/model.Error'

(function(){const pages=[{"idx":0,"href":"/docs/markdown/","title":"Example markdown","content":" Title with a line Lorem markdownum pavent auras, surgit nunc cingentibus libet Laomedonque que est. Pastor An arbor filia foedat, ne fugit aliter, per. Helicona illas et callida neptem est Oresitrophos caput, dentibus est venit. Tenet reddite famuli praesentem fortibus, quaeque vis foret si frondes gelidos gravidae circumtulit inpulit armenta nativum.\nHeadings h1 Heading h2 Heading h3 Heading h4 Heading h5 Heading h6 Heading Notes  The note with padding example.\n Code { \u0026#34;id\u0026#34;: \u0026#34;5ca5124868add448289e432e\u0026#34;, \u0026#34;project_id\u0026#34;: \u0026#34;5be2e16701d96d00012d26c3\u0026#34;, \u0026#34;description\u0026#34;: { \u0026#34;en\u0026#34;: \u0026#34;GTA 3 description\u0026#34; } } { \u0026quot;id\u0026quot;: \u0026quot;5ca5124868add448289e432e\u0026quot;, \u0026quot;project_id\u0026quot;: \u0026quot;5be2e16701d96d00012d26c3\u0026quot;, \u0026quot;description\u0026quot;: { \u0026quot;en\u0026quot;: \u0026quot;GTA 3 description\u0026quot; } }  Tables    Option Description     data path to data files to supply the data that will be passed into templates.   engine engine to be used for processing templates. Handlebars is the default.   ext extension to be used for dest files.    Columns Columns help organize shorter pieces of content horizontally for readability.\n{{\u0026lt; columns \u0026gt;}} \u0026lt;!-- begin columns block --\u0026gt; # Left Content Lorem markdownum insigne... \u0026lt;---\u0026gt; \u0026lt;!-- magic sparator, between columns --\u0026gt; # Mid Content Lorem markdownum insigne... \u0026lt;---\u0026gt; \u0026lt;!-- magic sparator, between columns --\u0026gt; # Right Content Lorem markdownum insigne... {{\u0026lt; /columns \u0026gt;}} Example Left Content Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.  Mid Content Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter!  Right Content Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.   Hints Hint shortcode can be used as hint/alerts/notification block.\nThere are 3 colors to choose: info, warning and danger.\n{{\u0026lt; hint [info|warning|danger] \u0026gt;}} **Markdown content** Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa {{\u0026lt; /hint \u0026gt;}} Example Markdown content\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa  Markdown content\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa  Markdown content\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa  Lists  Te at cruciabere vides rubentis manebo Maturuit in praetemptat ruborem ignara postquam habitasse Subitarum supplevit quoque fontesque venabula spretis modo  Buttons Buttons are styled links that can lead to local page or external link ad contain CSS styles.\n{{\u0026lt; button relref=\u0026#34;/\u0026#34; [class=\u0026#34;...\u0026#34;] \u0026gt;}}Get Home{{\u0026lt; /button \u0026gt;}} {{\u0026lt; button href=\u0026#34;https://github.com/alex-shpak/hugo-book\u0026#34; \u0026gt;}}Contribute{{\u0026lt; /button \u0026gt;}} Example  Get Home  Contribute  Expand Expand shortcode can help to decrease clutter on screen by hiding part of text. Expand content by clicking on it.\nExample Default {{\u0026lt; expand \u0026gt;}} ## Markdown content Lorem markdownum insigne... {{\u0026lt; /expand \u0026gt;}}  Expand ↕  Markdown content Lorem markdownum insigne\u0026hellip;    With Custom Label {{\u0026lt; expand \u0026#34;Custom Label\u0026#34; \u0026#34;...\u0026#34; \u0026gt;}} ## Markdown content Lorem markdownum insigne... {{\u0026lt; /expand \u0026gt;}}  Custom Label ...  Markdown content Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.    Tabs Tabs let you organize content by context, for example installation instructions for each supported platform.\n{{\u0026lt; tabs \u0026#34;uniqueid\u0026#34; \u0026gt;}} {{\u0026lt; tab \u0026#34;MacOS\u0026#34; \u0026gt;}} # MacOS Content {{\u0026lt; /tab \u0026gt;}} {{\u0026lt; tab \u0026#34;Linux\u0026#34; \u0026gt;}} # Linux Content {{\u0026lt; /tab \u0026gt;}} {{\u0026lt; tab \u0026#34;Windows\u0026#34; \u0026gt;}} # Windows Content {{\u0026lt; /tab \u0026gt;}} {{\u0026lt; /tabs \u0026gt;}} Example MacOS  MacOS This is tab MacOS content.\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\n Linux  Linux This is tab Linux content.\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\n Windows  Windows This is tab Windows content.\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\n  KaTeX KaTeX shortcode let you render math typesetting in markdown document. See KaTeX\nExample {{\u0026lt; katex [class=\u0026#34;text-center\u0026#34;] \u0026gt;}} x = \\begin{cases} a \u0026amp;\\text{if } b \\\\ c \u0026amp;\\text{if } d \\end{cases} {{\u0026lt; /katex \u0026gt;}}   \n$$ x = \\begin{cases} a \u0026\\text{if } b \\\\ c \u0026\\text{if } d \\end{cases} $$   Mermaid Chart Mermaid is library for generating svg charts and diagrams from text.\nExample {{\u0026lt; mermaid [class=\u0026#34;text-center\u0026#34;]\u0026gt;}} sequenceDiagram Alice-\u0026gt;\u0026gt;Bob: Hello Bob, how are you? alt is sick Bob-\u0026gt;\u0026gt;Alice: Not so good :( else is well Bob-\u0026gt;\u0026gt;Alice: Feeling fresh like a daisy end opt Extra response Bob-\u0026gt;\u0026gt;Alice: Thanks for asking end {{\u0026lt; /mermaid \u0026gt;}}   sequenceDiagram Alice-Bob: Hello Bob, how are you? alt is sick Bob-Alice: Not so good :( else is well Bob-Alice: Feeling fresh like a daisy end opt Extra response Bob-Alice: Thanks for asking end   Images   "},{"idx":1,"href":"/docs/payments/fulfillment/","title":"After the payment","content":"PaySuper\n"},{"idx":2,"href":"/docs/payments/","title":"Checkout Overview","content":" PaySuper Checkout PaySuper Checkout creates a secure PaySuper-hosted form that lets you collect payments with just a few lines of code. The Checkout Form loads near instantly and is designed to boost your paying conversion rate.\n  PaySuper Checkout features  Payment methods: VISA, Master Card, AMEX, JCB, China UnionPay, Bitcoin payments, Alipay, QIWI, Bank Wire Transfers. Payment types: Simple Checkout, Items Checkout. Authentication: Dynamic 3D Secure (ready for Strong Customer Authentication). Localization: Localized for 2 languages with 10 more translations coming soon. Email receipts: Automatic email receipts right to your customers\u0026rsquo; inbox. Automated calculations: Automatically calculates the taxes and VAT due on your orders. Conversion-optimized: The payment form loads instantly with a single-page layout.  Try now See how Checkout Form looks and feels Choose a card payment method and enter one of the test cards to checkout in a test mode:\nDefault card: 4000 0000 0000 0002\n3D Secure: 4000 0000 0000 0077\nEnter arbitrary cardholder name, expiry date and CVV2/CVC2/CAV2 (Secure code) with these PANs.\nTest Payment \n HOW IT WORKS\nTry out the payment sample or see the code on GitHub.\n  Getting Started To get started with PaySuper, choose your business model:\nSimple Checkout Simple Checkout is designed for payment orders with dynamical pricing, for example, stores that use its e-commerce engine for product management. Likewise, this option works well with non-product payments such as donations. In this mode, you specify the currency and the price, while the payment amount due for the end-user is calculated accordingly to the exchange rate if it differs from the specified order currency.\nTyped Checkout PaySuper Checkout provides several types of products which you specify in an order as a parameter type:\nGame Keys\nThis sales option is best suited to sale game keys for DRM platforms such as Steam, GOG, Uplay, Origin, PSN, XBOX Store, Nintendo Store, Itch.io, Epic Games Store. This feature allows you to sell any key-activated products (such as DLCs and expansion packs) that the target DRM platforms support.\nVirtual Items\nThis sales option enables you to sell your Virtual Items, like swords, guns, helmets and virtual currency packs.\nVirtual Currency\nVirtual Currency is an option to sell your in-game currency — gold, coins, etc. It allows you to sell customisable quantity of your currency.\nNext steps Continue with the Quick Start guide.  Questions? Sales Our salespeople are pleasant and friendly. Leave your contact details, and we\u0026rsquo;ll be back to you in no time.  Support We are always happy to help with a code, improve a guide or consider a feature.  GitHub The PaySuper Checkout Form, the JS SDK and even the server are available as a source code on our GitHub. You\u0026rsquo;re welcome to explore the code and help us make PaySuper even better.   "},{"idx":3,"href":"/docs/payments/customization/","title":"Customizing Checkout","content":" Customizing Checkout Learn about the different ways you can customize your Checkout integration.\nLocalization PaySuper Checkout Form is localized for 2 languages with 10 more translations coming soon.\nYou can choose the complete set of supported languages for the project and products descriptions on the Project Settings page.\nPrefilling user data Boost your paying conversion rate with pre-filled payment form with user\u0026rsquo;s name and email. Generate a Token to encrypt all required information about the user intent to pay.\nSaving payment methods for future Store in PaySuper a user\u0026rsquo;s billing address and a payment method data to prefill once the Checkout Form opened.\nCustomizing theme const paySuper = new PaySuper({ token: '5cd5620f06ae110001509185', viewScheme: 'light' });  Available options: dark (default), light.\nCustomizing the colors const paySuper = new PaySuper({ token: '5cd5620f06ae110001509185', viewSchemeConfig: { \u0026lt;!-- headerTextColor overrides the default value of the viewSchemeConfig object --\u0026gt; headerTextColor: '#333333' } });  Available parameters of viewSchemeConfig\nNext steps Testig the Checkout in the Sandbox.  Going live checklist.  Questions? Sales Our salespeople are pleasant and friendly. Leave your contact details, and we\u0026rsquo;ll be back to you in no time.  Support We are always happy to help with a code, improve a guide or consider a feature.  GitHub The PaySuper Checkout Form, the JS SDK and even the server are available as a source code on our GitHub. You\u0026rsquo;re welcome to explore the code and help us make PaySuper even better.   "},{"idx":4,"href":"/docs/","title":"Docs","content":""},{"idx":5,"href":"/docs/payments/live/","title":"Going Live","content":"PaySuper\n"},{"idx":6,"href":"/docs/api/v1/","title":"PaySuper API","content":""},{"idx":7,"href":"/docs/api/v1/authentication/","title":"PaySuper API Authentication","content":"PaySuper\n"},{"idx":8,"href":"/docs/api/v1/compression/","title":"PaySuper API Compression","content":"PaySuper\n"},{"idx":9,"href":"/docs/api/v1/errors/","title":"PaySuper API Errors List","content":"PaySuper\n"},{"idx":10,"href":"/docs/api/v1/pagination/","title":"PaySuper API Pagination","content":"PaySuper\n"},{"idx":11,"href":"/docs/api/","title":"PaySuper API Reference","content":"PaySuper\n"},{"idx":12,"href":"/docs/api/v1/versioning/","title":"PaySuper API Versioning","content":"PaySuper\n"},{"idx":13,"href":"/","title":"PaySuper Documentation","content":" Documentation Getting started PaySuper is a payment service with an open source multifunctional toolkit that provides secure and immediate online payment transactions for the games industry.\n  Expand the market with online payments PaySuper enables you to accept payments easily and securely in 170+ countries. We support major payment systems such as Visa, MasterCard, JCB, China Union Pay, Bitcoin, Alipay, QIWI along with bank wire transfers.\nFollow our development quick start to integrate online payments on your website or a game client.\nQuestions? Sales Our salespeople are pleasant and friendly. Leave your contact details, and we\u0026rsquo;ll be back to you in no time.  Support We are always happy to help with a code, improve a guide or consider a feature.  GitHub The PaySuper Checkout form, the JS SDK and even the server are available as a source code on our GitHub. You\u0026rsquo;re welcome to explore the code and help us make PaySuper even better.   "},{"idx":14,"href":"/docs/payments/quick-start/","title":"Quick start","content":" Payments Flow User Flow   Integration Flow   Quick start Step 1. Register a PaySuper Merchant account. Step 2. Set up a Project Having a single project is enough to start selling.\n Create a project \u0026gt;    To create a project:\n Open the Projects List page Click the Create Project button. Enter a Project Name. Click Create to redirect to the Project Settings page. Fill the required information in an appropriate localization:\n Full description Short description Secret key: Generate a secret key to set up correct integration with PaySuper platform. Currency: by default is equal to USD.  Optional information:\n Localization: you can choose the complete set of supported languages for the project and products descriptions Logotype  Click Save.\n     If you want to sell products (as Game keys, Virtual items, Virtual currency) then easily add the necessary sales information about your products to the project.\n Add a Game key to the project \u0026gt;    To add a Game key:\n Open the Projects List page Open the Project settings page.       Add a Virtual item to the project \u0026gt;    To add a Virtual item:\n Open the Projects List page Open the Project settings page.       Add a Virtual currency to the project \u0026gt;    To add a Virtual currency:\n Open the Projects List page Open the Project settings page.      Step 3. Create a Token or Order ID You can obtain a Token to integrate with the Checkout Form. The Token is a secure string that encrypts all order parameters which identifies a user and project.\nToken-based features:\n Instantly redirect from anywhere of your game application: You can create a token after a user registered or logged in your game and instantly redirect the user to Checkout form when the user intent a payment. The pre-filled information in a payment form: Token can encrypt all required information about your user intent to pay. Checkout form is pre-filled in this case.  To create a Token: Send the request POST /api/v1/tokens. Both the request and the response are in JSON format.\n{ \u0026quot;user\u0026quot;: { \u0026quot;id\u0026quot;: \u0026quot;400001000053548996\u0026quot;, \u0026quot;email\u0026quot;: { \u0026quot;value\u0026quot;: \u0026quot;mikhail.kirpa16_1@protocol.one\u0026quot;, \u0026quot;verified\u0026quot;: true }, \u0026quot;phone\u0026quot;: { \u0026quot;value\u0026quot;: \u0026quot;380991234567\u0026quot;, \u0026quot;verified\u0026quot;: true }, \u0026quot;name\u0026quot;: { \u0026quot;value\u0026quot;: \u0026quot;mikhail.kirpa16\u0026quot; }, \u0026quot;ip\u0026quot;: { \u0026quot;value\u0026quot;: \u0026quot;80.91.180.90\u0026quot; }, \u0026quot;locale\u0026quot;: { \u0026quot;value\u0026quot;: \u0026quot;en\u0026quot; }, \u0026quot;address\u0026quot;: { \u0026quot;country\u0026quot;: \u0026quot;UA\u0026quot;, \u0026quot;city\u0026quot;: \u0026quot;string\u0026quot;, \u0026quot;postal_code\u0026quot;: \u0026quot;string\u0026quot;, \u0026quot;state\u0026quot;: \u0026quot;string\u0026quot; }, \u0026quot;metadata\u0026quot;: {} }, \u0026quot;settings\u0026quot;: { \u0026quot;project_id\u0026quot;: \u0026quot;5cda856f38e0e20001769886\u0026quot;, \u0026quot;return_url\u0026quot;: { \u0026quot;success\u0026quot;: \u0026quot;https://success\u0026quot;, \u0026quot;fail\u0026quot;: \u0026quot;https://fail\u0026quot; }, \u0026quot;currency\u0026quot;: \u0026quot;EUR\u0026quot;, \u0026quot;amount\u0026quot;: 120, \u0026quot;items\u0026quot;: [ { \u0026quot;sku\u0026quot;: \u0026quot;string\u0026quot;, \u0026quot;amount\u0026quot;: 0, \u0026quot;currency\u0026quot;: \u0026quot;string\u0026quot; } ], \u0026quot;description\u0026quot;: \u0026quot;string\u0026quot;, \u0026quot;metadata\u0026quot;: {} } }  You can find the full list of parameters in the [API Reference]().\nOrder-based features:\n Request a payment order on-demand: It is best suited for e-store where a user creates a product cart.  To create a payment Order ID: Send the request POST /api/v1/order. Both the request and the response are in JSON format.\ncurl -X POST \u0026quot;https://p1payapi.tst.protocol.one/api/v1/order\u0026quot; \\ -H \u0026quot;accept: application/json\u0026quot; \\ -H \u0026quot;Content-Type: application/json\u0026quot; \\ -d \u0026quot;{ \\\u0026quot;account\\\u0026quot;: \\\u0026quot;string\\\u0026quot;, \\\u0026quot;amount\\\u0026quot;: 10, \\\u0026quot;currency\\\u0026quot;: \\\u0026quot;USD\\\u0026quot;, \\\u0026quot;description\\\u0026quot;: \\\u0026quot;string\\\u0026quot;, \\\u0026quot;order_id\\\u0026quot;: \\\u0026quot;string\\\u0026quot;, \\\u0026quot;other\\\u0026quot;: {}, \\\u0026quot;payer_email\\\u0026quot;: \\\u0026quot;string\\\u0026quot;, \\\u0026quot;payer_ip\\\u0026quot;: \\\u0026quot;string\\\u0026quot;, \\\u0026quot;payer_phone\\\u0026quot;: \\\u0026quot;string\\\u0026quot;, \\\u0026quot;payment_method\\\u0026quot;: \\\u0026quot;string\\\u0026quot;, \\\u0026quot;project\\\u0026quot;: \\\u0026quot;5daf6b125c8256000117d86f\\\u0026quot;, \\\u0026quot;region\\\u0026quot;: \\\u0026quot;string\\\u0026quot;, \\\u0026quot;signature\\\u0026quot;: \\\u0026quot;string\\\u0026quot;, \\\u0026quot;url_fail\\\u0026quot;: \\\u0026quot;string\\\u0026quot;, \\\u0026quot;url_notify\\\u0026quot;: \\\u0026quot;string\\\u0026quot;, \\\u0026quot;url_success\\\u0026quot;: \\\u0026quot;string\\\u0026quot;, \\\u0026quot;url_verify\\\u0026quot;: \\\u0026quot;string\\\u0026quot;}\u0026quot;  ССЫЛКА НА страницу simple.md\nССЫЛКА НА страницу typed.md\nYou can find the full list of parameters in the [API Reference]().\nStep 4. Set up the payment form Checkout Form has a flexible integration on all your available platforms.\nEmbedded by API, SDK Modal window by API New window by SDK\nStep 5. Set up webhook handling Handle actions and transaction states after the payment.\nQuestions? Sales Our salespeople are pleasant and friendly. Leave your contact details, and we\u0026rsquo;ll be back to you in no time.  Support We are always happy to help with a code, improve a guide or consider a feature.  GitHub The PaySuper Checkout form, the JS SDK and even the server are available as a source code on our GitHub. You\u0026rsquo;re welcome to explore the code and help us make PaySuper even better.   "},{"idx":15,"href":"/docs/payments/simple/","title":"Simple Checkout","content":"PaySuper\n"},{"idx":16,"href":"/docs/payments/sandbox/","title":"Testing Checkout","content":"PaySuper\n"},{"idx":17,"href":"/docs/payments/typed/","title":"Typed Checkout","content":"PaySuper\n"}];window.bookSearch={pages:pages,idx:lunr(function(){this.ref("idx");this.field("title");this.field("content");pages.forEach(this.add,this);}),}})();
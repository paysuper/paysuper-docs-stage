(function(){const pages=[{"idx":0,"href":"/docs/markdown/","title":"Example markdown","content":" Title with a line Lorem markdownum pavent auras, surgit nunc cingentibus libet Laomedonque que est. Pastor An arbor filia foedat, ne fugit aliter, per. Helicona illas et callida neptem est Oresitrophos caput, dentibus est venit. Tenet reddite famuli praesentem fortibus, quaeque vis foret si frondes gelidos gravidae circumtulit inpulit armenta nativum.\nHeadings h1 Heading h2 Heading h3 Heading h4 Heading h5 Heading h6 Heading Notes  The note with padding example.\n Code { \u0026#34;id\u0026#34;: \u0026#34;5ca5124868add448289e432e\u0026#34;, \u0026#34;project_id\u0026#34;: \u0026#34;5be2e16701d96d00012d26c3\u0026#34;, \u0026#34;description\u0026#34;: { \u0026#34;en\u0026#34;: \u0026#34;GTA 3 description\u0026#34; } } { \u0026quot;id\u0026quot;: \u0026quot;5ca5124868add448289e432e\u0026quot;, \u0026quot;project_id\u0026quot;: \u0026quot;5be2e16701d96d00012d26c3\u0026quot;, \u0026quot;description\u0026quot;: { \u0026quot;en\u0026quot;: \u0026quot;GTA 3 description\u0026quot; } }  Tables    Option Description     data path to data files to supply the data that will be passed into templates.   engine engine to be used for processing templates. Handlebars is the default.   ext extension to be used for dest files.    Columns Columns help organize shorter pieces of content horizontally for readability.\n{{\u0026lt; columns \u0026gt;}} \u0026lt;!-- begin columns block --\u0026gt; # Left Content Lorem markdownum insigne... \u0026lt;---\u0026gt; \u0026lt;!-- magic sparator, between columns --\u0026gt; # Mid Content Lorem markdownum insigne... \u0026lt;---\u0026gt; \u0026lt;!-- magic sparator, between columns --\u0026gt; # Right Content Lorem markdownum insigne... {{\u0026lt; /columns \u0026gt;}} Example Left Content Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.  Mid Content Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter!  Right Content Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.   Hints Hint shortcode can be used as hint/alerts/notification block.\nThere are 3 colors to choose: info, warning and danger.\n{{\u0026lt; hint [info|warning|danger] \u0026gt;}} **Markdown content** Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa {{\u0026lt; /hint \u0026gt;}} Example Markdown content\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa  Markdown content\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa  Markdown content\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa  Lists  Te at cruciabere vides rubentis manebo Maturuit in praetemptat ruborem ignara postquam habitasse Subitarum supplevit quoque fontesque venabula spretis modo  Buttons Buttons are styled links that can lead to local page or external link ad contain CSS styles.\n{{\u0026lt; button relref=\u0026#34;/\u0026#34; [class=\u0026#34;...\u0026#34;] \u0026gt;}}Get Home{{\u0026lt; /button \u0026gt;}} {{\u0026lt; button href=\u0026#34;https://github.com/alex-shpak/hugo-book\u0026#34; \u0026gt;}}Contribute{{\u0026lt; /button \u0026gt;}} Example  Get Home  Contribute  Expand Expand shortcode can help to decrease clutter on screen by hiding part of text. Expand content by clicking on it.\nExample Default {{\u0026lt; expand \u0026gt;}} ## Markdown content Lorem markdownum insigne... {{\u0026lt; /expand \u0026gt;}}  Expand ↕  Markdown content Lorem markdownum insigne\u0026hellip;    With Custom Label {{\u0026lt; expand \u0026#34;Custom Label\u0026#34; \u0026#34;...\u0026#34; \u0026gt;}} ## Markdown content Lorem markdownum insigne... {{\u0026lt; /expand \u0026gt;}}  Custom Label ...  Markdown content Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.    Tabs Tabs let you organize content by context, for example installation instructions for each supported platform.\n{{\u0026lt; tabs \u0026#34;uniqueid\u0026#34; \u0026gt;}} {{\u0026lt; tab \u0026#34;MacOS\u0026#34; \u0026gt;}} # MacOS Content {{\u0026lt; /tab \u0026gt;}} {{\u0026lt; tab \u0026#34;Linux\u0026#34; \u0026gt;}} # Linux Content {{\u0026lt; /tab \u0026gt;}} {{\u0026lt; tab \u0026#34;Windows\u0026#34; \u0026gt;}} # Windows Content {{\u0026lt; /tab \u0026gt;}} {{\u0026lt; /tabs \u0026gt;}} Example MacOS  MacOS This is tab MacOS content.\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\n Linux  Linux This is tab Linux content.\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\n Windows  Windows This is tab Windows content.\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\n  KaTeX KaTeX shortcode let you render math typesetting in markdown document. See KaTeX\nExample {{\u0026lt; katex [class=\u0026#34;text-center\u0026#34;] \u0026gt;}} x = \\begin{cases} a \u0026amp;\\text{if } b \\\\ c \u0026amp;\\text{if } d \\end{cases} {{\u0026lt; /katex \u0026gt;}}   \n$$ x = \\begin{cases} a \u0026\\text{if } b \\\\ c \u0026\\text{if } d \\end{cases} $$   Mermaid Chart Mermaid is library for generating svg charts and diagrams from text.\nExample {{\u0026lt; mermaid [class=\u0026#34;text-center\u0026#34;]\u0026gt;}} sequenceDiagram Alice-\u0026gt;\u0026gt;Bob: Hello Bob, how are you? alt is sick Bob-\u0026gt;\u0026gt;Alice: Not so good :( else is well Bob-\u0026gt;\u0026gt;Alice: Feeling fresh like a daisy end opt Extra response Bob-\u0026gt;\u0026gt;Alice: Thanks for asking end {{\u0026lt; /mermaid \u0026gt;}}   sequenceDiagram Alice-Bob: Hello Bob, how are you? alt is sick Bob-Alice: Not so good :( else is well Bob-Alice: Feeling fresh like a daisy end opt Extra response Bob-Alice: Thanks for asking end   Images   "},{"idx":1,"href":"/docs/payments/fulfillment/","title":"After the payment","content":" Your customer gets an email with the receipt and an extra email with the purchased Product or Products as soon as the transaction is complete. If your customer has purchased several game-keys for different DRM platforms, they get an email per DRM platform with a game key and instructions on how to activate the key on the target DRM store. At the same time you see that transaction on the Dashboard in PaySuper Admin.\nYou can handle actions after your customer completes their payment.\nFulfilling purchases with webhooks PaySuper can send the payment.success webhook event to your server to notify you when a customer completes the payment. You can configure webhooks for your Projects in PaySuper Admin and handle them on your server.\nA webhook handler is a script on your server that handles the PaySuper events such as payment.success or payment.cancel. See all event types in [PaySuper API reference]().\nThese webhook events are signed to protect you from fraudlent activities. You can validate our signed webhooks by generating a signature and comparing it to the value of the Authorization http header value.\n** Webhook object can look like this: { \u0026#34;id\u0026#34;: \u0026#34;22d6d597-000f-5000-9000-145f6df21d6f\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;notification\u0026#34;, \u0026#34;event\u0026#34;: \u0026#34;payment.success\u0026#34;, \u0026#34;live\u0026#34;: true, \u0026#34;created_at\u0026#34;: \u0026#34;2018-07-10T14:27:54.691Z\u0026#34;, \u0026#34;expires_at\u0026#34;: null, \u0026#34;delivery_try\u0026#34;: 1, \u0026#34;object\u0026#34;: {} }\n   Name Type Description     id string Unique identifier for the object.   type string String representing the web hook’s type.   event string String representing the event`s type.   live boolean True is notification originated from the live environment.   created_at DateTime The date and time in ISO 8601 when an event has been created.   expires_at DateTime The date and time in ISO 8601 when the event stops trying to deliver.   delivery_try integer The current delivery try for this event   object object The object representing payload of event with given type. Objects of the same type share the same value.    "},{"idx":2,"href":"/docs/payments/","title":"Checkout Overview","content":" PaySuper Checkout PaySuper Checkout creates a secure PaySuper-hosted form that lets you collect payments with just a few lines of code. The Checkout Form loads near instantly and is designed to boost your paying conversion rate.\n  PaySuper Checkout features  Payment methods: VISA, Master Card, AMEX, JCB, China UnionPay, Bitcoin payments, Alipay, QIWI, Bank Wire Transfers. Payment types: Simple Checkout, Items Checkout. Authentication: Dynamic 3D Secure (ready for Strong Customer Authentication). Localization: Localized for 2 languages with 10 more translations coming soon. Email receipts: Automatic email receipts right to your customers\u0026rsquo; inbox. Automated calculations: Automatically calculates the taxes and VAT due on your orders. Conversion-optimized: The payment form loads instantly with a single-page layout.  Try now See how Checkout Form looks and feels Choose a card payment method and enter one of the test cards to checkout in a test mode:\nDefault card: 4000 0000 0000 0002\n3D Secure: 4000 0000 0000 0077\nEnter arbitrary cardholder name, expiry date and CVV2/CVC2/CAV2 (Secure code) with these PANs.\nTest Payment \n HOW IT WORKS\nTry out the payment sample or see the code on GitHub.\n  Getting Started To get started with PaySuper, choose your business model:\nSimple Checkout Simple Checkout is designed for payment orders with dynamical pricing, for example, stores that use its e-commerce engine for product management. Likewise, this option works well with non-product payments such as donations. In this mode, you specify the currency and the price, while the payment amount due for the end-user is calculated accordingly to the exchange rate if it differs from the specified order currency.\nProducts Checkout PaySuper Checkout provides several types of products which you specify in an order as a parameter type:\nGame Keys\nThis sales option is best suited to sale game keys for DRM platforms such as Steam, GOG, Uplay, Origin, PSN, XBOX Store, Nintendo Store, Itch.io, Epic Games Store. This feature allows you to sell any key-activated products (such as DLCs and expansion packs) that the target DRM platforms support.\nVirtual Items\nThis sales option enables you to sell your Virtual Items, like swords, guns, helmets and virtual currency packs.\nVirtual Currency\nVirtual Currency is an option to sell your in-game currency — gold, coins, etc. It allows you to sell customisable quantity of your currency.\nNext steps Continue with the Quick Start guide  Questions? Sales Our salespeople are pleasant and friendly. Leave your contact details, and we\u0026rsquo;ll be back to you in no time.  Support We are always happy to help with a code, improve a guide or consider a feature.  GitHub The PaySuper Checkout Form, the JS SDK and even the server are available as a source code on our GitHub. You\u0026rsquo;re welcome to explore the code and help us make PaySuper even better.   Not a developer? Our engineers will help you to integrate PaySuper Checkout into your existing site or game in the best possible way. "},{"idx":3,"href":"/docs/payments/sdk-integration/","title":"Client-Only Integration","content":" Client-Only Integration with PaySuper JS SDK It’s easy to embed PaySuper JS SDK on any platform to display a Payment Form with just a few lines of code.  HOW IT WORKS\nTry out the payment sample or see the code on GitHub.\n  Step 1. Embed the PaySuper Form To get started, include the following script tag on your website - always load it directly from https://cdn.pay.super.com:\n\u0026lt;script src=\u0026#34;https://cdn.pay.super.com/paysdk/latest/paysuper.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; Step 2. Provide parameters Simple Checkout Create a Checkout Form to collect one-time payments. It\u0026rsquo;s enough to have a project ID to initiate a payment with a acceptable amount.\nconst paySuper = new PaySuper({ project: \u0026#39;5cd5624a06ae110001509186\u0026#39;, amount: 50, currency: \u0026#39;USD\u0026#39; });  Token-based Checkout const paySuper = new PaySuper({ token: \u0026#39;5cd5620f06ae110001509185\u0026#39; });  Products Checkout Game key  const paySuper = new PaySuper({ project: \u0026#39;5cd5620f06ae110001509185\u0026#39;, products: [\u0026#39;5d7baee015ff7d0001b986a8\u0026#39;], platform_id: \u0026#39;gog\u0026#39;, type: \u0026#39;key\u0026#39; });   Virtual item  const paySuper = new PaySuper({ project: \u0026#39;5cd5620f06ae110001509185\u0026#39;, products: [\u0026#39;5d848f484dd6a50001970479\u0026#39;, \u0026#39;5d8c7a219e362100013de214\u0026#39;], type: \u0026#39;product\u0026#39; });   Virtual currency  ПРИМЕР КОДА ПРОСИТЬ У ДИМЫ или АНДРЕЯ кода реализуют\nconst paySuper = new PaySuper({ project: \u0026#39;5cd5620f06ae110001509185\u0026#39;, products: [\u0026#39;5d848f484dd6a50001970479\u0026#39;, \u0026#39;5d8c7a219e362100013de214\u0026#39;], type: \u0026#39;virtual_currency\u0026#39; });    Full list of PaySuper parameters\n Use your IDs for the Project and Products found in your merchant account on the PaySuper Projects. To get the Project and Product IDs: open your Project settings page, select the product tab and click on the Product name. Copy the Project and Product IDs from an opened page URL.\n Step 3. Display a form When your customer is ready to pay, call create an instance of the PaySuper and render it:\n\u0026lt;script\u0026gt; function buyItems() { const paySuper = new PaySuper({ token: \u0026#39;5cd5620f06ae110001509185\u0026#39; }); // Embed a form as a modal window  paySuper.renderModal(); // Embed a form as an iframe  // paySuper.renderPage(); } \u0026lt;/script\u0026gt; \u0026lt;button onclick=\u0026#34;buyItems()\u0026#34;\u0026gt;BUY\u0026lt;/button\u0026gt; Step 4. Handle the purchase events paySuper.on(\u0026#39;paymentCompleted\u0026#39;, function() { // You can show a message about payment is completed })  Full events list in the expected order of execution\nNext steps Testig the Checkout  After the payment  Customizing Checkout  Questions? Sales Our salespeople are pleasant and friendly. Leave your contact details, and we\u0026rsquo;ll be back to you in no time.  Support We are always happy to help with a code, improve a guide or consider a feature.  GitHub The PaySuper Checkout Form, the JS SDK and even the server are available as a source code on our GitHub. You\u0026rsquo;re welcome to explore the code and help us make PaySuper even better.   Not a developer? Our engineers will help you to integrate PaySuper Checkout into your existing site or game in the best possible way. "},{"idx":4,"href":"/docs/payments/integration/","title":"Client-Server Integration","content":" Client-Server Integration with PaySuper API Client-side code\nServer-side code\nStep 1. Send a HTTP request to initiate a payment POST /api/v1/order\nДОБАВИТЬ RUNKIT\nStep 2. Retrieve a response parameter payment_form_url - URL of PaySuper Checkout Form.\nStep 3. Show the Checkout Form:\n Open the received URL in a browser as a new window\n Integrate the the Checkout Form as iframe:\n  \u0026lt;iframe src=\u0026#34;{payment_form_url}\u0026#34;\u0026gt;\u0026lt;/iframe\u0026gt; Questions? Sales Our salespeople are pleasant and friendly. Leave your contact details, and we\u0026rsquo;ll be back to you in no time.  Support We are always happy to help with a code, improve a guide or consider a feature.  GitHub The PaySuper Checkout Form, the JS SDK and even the server are available as a source code on our GitHub. You\u0026rsquo;re welcome to explore the code and help us make PaySuper even better.   Not a developer? Our engineers will help you to integrate PaySuper Checkout into your existing site or game in the best possible way. "},{"idx":5,"href":"/docs/payments/customization/","title":"Customizing Checkout","content":" Customizing Checkout Learn about the different ways you can customize your Checkout integration.\nLocalization The Checkout Form is localized for 2 languages with 10 more translations coming soon.\nYou can choose the complete set of supported languages for the project and products descriptions on the Project Settings page.\nPrefilling user data Boost your paying conversion rate with pre-filled payment form with user\u0026rsquo;s name and email. Generate a Token to encrypt all required information about the user intent to pay.\nSaving payment methods for future Store in PaySuper a user\u0026rsquo;s billing address and a payment method data to prefill once the Checkout Form opened.\nCustomizing theme const paySuper = new PaySuper({ token: \u0026#39;5cd5620f06ae110001509185\u0026#39;, viewScheme: \u0026#39;light\u0026#39; });  Available options: dark (default), light.\nCustomizing the colors const paySuper = new PaySuper({ token: \u0026#39;5cd5620f06ae110001509185\u0026#39;, viewSchemeConfig: { // headerTextColor overrides the default value of the viewSchemeConfig object  headerTextColor: \u0026#39;#333333\u0026#39; } });  Available parameters of viewSchemeConfig\nNext steps Testig the Checkout  Going live checklist  Questions? Sales Our salespeople are pleasant and friendly. Leave your contact details, and we\u0026rsquo;ll be back to you in no time.  Support We are always happy to help with a code, improve a guide or consider a feature.  GitHub The PaySuper Checkout Form, the JS SDK and even the server are available as a source code on our GitHub. You\u0026rsquo;re welcome to explore the code and help us make PaySuper even better.   Not a developer? Our engineers will help you to integrate PaySuper Checkout into your existing site or game in the best possible way. "},{"idx":6,"href":"/docs/","title":"Docs","content":""},{"idx":7,"href":"/docs/payments/live/","title":"Going Live","content":" Below is a holistic view of the process from the very start to going live:  Complete the onboarding and fill in the info about your Projects and Products Implement PaySuper Checkout on your website Setup the webhooks on your backend Test that everything works fine in our sandbox We verify that you\u0026rsquo;re good to go live and flip the switch You can stop reading this text, instead do navigate to the Dashboard to see the first sales =)  Now let\u0026rsquo;s double check all the important details that you may have missed When you’re done with PaySuper Checkout integration and are thinking about going live, we suggest you refer to the points below to make sure you haven\u0026rsquo;t missed an important detail or two.\nTest/live API switch Webhooks verification tests on our backend PaySuper Admin - important settings "},{"idx":8,"href":"/docs/api/","title":"PaySuper API Reference","content":""},{"idx":9,"href":"/","title":"PaySuper Documentation","content":" Documentation Getting started PaySuper is a payment service with an open source multifunctional toolkit that provides secure and immediate online payment transactions for the games industry.\n  Expand the market with online payments PaySuper enables you to accept payments easily and securely in 170+ countries. We support major payment systems such as Visa, MasterCard, JCB, China Union Pay, Alipay along with direct banking in Germany, Austria and Switzerland.\nFollow our development quick start to integrate online payments on your website or a game client.\nQuestions? Sales Our salespeople are pleasant and friendly. Leave your contact details, and we\u0026rsquo;ll be back to you in no time.  Support We are always happy to help with a code, improve a guide or consider a feature.  GitHub The PaySuper Checkout Form, the JS SDK and even the server are available as a source code on our GitHub. You\u0026rsquo;re welcome to explore the code and help us make PaySuper even better.   Not a developer? Our engineers will help you to integrate PaySuper Checkout into your existing site or game in the best possible way. "},{"idx":10,"href":"/docs/payments/quick-start/","title":"Quick start","content":" Payments Flow User Flow   Integration Flow   Quick start Step 1 Register a PaySuper Company account  Registration and onboarding     Sign up. Verify your email address from a delivered confirmation email. Follow several steps of a brief Welcome Onboarding. It\u0026rsquo;s required to fill in the Banking info in the Company Onboarding to enable creating a project.  When you are ready to start selling you will need to fill in all your company details in the Company Onboarding and the signed documents in the License Agreement.\nBefore sign the documents we manually check each new account to ensure that our platform is attended only by companies who are related to the gaming industry, this allows us to provide maximum features and stability to all our users.\n    Step 2 Set up a Project Having a single project is enough to start selling.\n Create a project    To create a project:\n Open the Projects List page Click the Create Project button. Enter a Project Name. Click Create to redirect to the Project Settings page. Fill the required information in an appropriate localization:\n Full description Short description Secret key: Generate a secret key to set up correct integration with PaySuper platform. Currency: by default is equal to USD.  Optional information:\n Localization: you can choose the complete set of supported languages for the project and products descriptions Logotype  Click Save.\n     If you want to sell products (as Game keys, Virtual items, Virtual currency) then easily add the necessary sales information about your products to the project.\n Add a Game key to the project    To add a Game key:\n Open the Projects List page Open the Project settings page.       Add a Virtual item to the project    To add a Virtual item:\n Open the Projects List page Open the Project settings page.       Add a Virtual currency to the project    To add a Virtual currency:\n Open the Projects List page Open the Project settings page.      Step 3 Set up a Checkout Form Use Checkout to collect one-time payments or to sell products defined in the Project.\nIntegration on client-side The client-only integration lets you accept online payments using only frontend code PaySuper JS SDK. The Checkout Form can be embedded as an iframe or modal window.\nIntegration on client and server-side You can also integrate on a server-side without PaySuper SJ SDK for other reasons. Checkout Form can be embedded as an iframe or new window.\nStep 4 After the payment Once payment is successful, you should fulfill the customer’s purchase. You can use webhooks to fulfill the purchase. For more details about handling purchase fulfillment with Checkout, see After the payment.\nNext steps Testig the Checkout  After the payment  Customizing Checkout  Questions? Sales Our salespeople are pleasant and friendly. Leave your contact details, and we\u0026rsquo;ll be back to you in no time.  Support We are always happy to help with a code, improve a guide or consider a feature.  GitHub The PaySuper Checkout Form, the JS SDK and even the server are available as a source code on our GitHub. You\u0026rsquo;re welcome to explore the code and help us make PaySuper even better.   Not a developer? Our engineers will help you to integrate PaySuper Checkout into your existing site or game in the best possible way. "},{"idx":11,"href":"/docs/payments/testing/","title":"Testing Checkout","content":" Testing the Payment Process Before going live you should test the payment process in the Sandbox.\nTo test a bank card payment:\n Open the PaySuper Checkout Form. Choose the Credit/Debit cards group of payment methods. Enter the bank card details. Enter any values in the remaining fields.   You can also specify incorrect details (card number, expiration date, or CVV) in order to generate an error.\n List of bank cards to be used for testing:\nSandbox bank card payments can be made in the following currencies: USD, EUR, RUB, GBP, AED, ALL, AMD, ARS, AUD, AZN, BGN, BRL, BYN, CAD, CHF, CLP, CNY, COP, CZK, DKK, DZD, EGP, GEL, HKD, HRK, HUF, IDR, ILS, INR, ISK, JPY, KES, KGS, KRW, KZT, MAD, MDL, MKD, MNT, MXN, MYR, NGN, PEN, PHP, PKR, PLN, RON, RSD, SAR, SEK, SGD, THB, TRY, TWD, UAH, UYU, UZS, VEF, VND, ZAR.\nYou can make a real payment and then initiate a refund via\nTo test the payment process by making real payments, it is also recommended to use a bank card:\nOpen the payment UI. Choose the Credit/Debit cards group of payment methods. Enter valid bank card details. After the payment is made, go to the Transaction search section in Publisher Account. Select your test transaction and click Refund (the transaction must be in the Completed status). Note: It is recommended to use Visa and MasterCard cards to test the payment process.\n"},{"idx":12,"href":"/docs/payments/token/","title":"Token-based Checkout","content":" Token-based Checkout A Token is a secure string that represents the details of your user, game and purchase parameters. It\u0026rsquo;s You can create the Token when your customer wants to pay for something. After redirecting your customer to a Checkout Session, Stripe presents a payment form where your customer can complete their purchase.\nToken-based features:\n Instantly redirect from anywhere of your game application: You can create a token after a user registered or logged in your game and instantly redirect the user to the Checkout Form when the user intent a payment. The pre-filled information in a payment form: Token can encrypt all required information about your user intent to pay. The Checkout Form is pre-filled in this case.  To create a Token:\nSend the request POST /api/v1/tokens. Both the request and the response are in JSON format.\nПРИМЕР ТОКЕНА с обязательными параметрами для ключа и пользователя Вставьте сюда https://runkit.com/home пример с созданием токена\n"}];window.bookSearch={pages:pages,idx:lunr(function(){this.ref("idx");this.field("title");this.field("content");pages.forEach(this.add,this);}),}})();